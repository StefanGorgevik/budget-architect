{"version":3,"sources":["components/BudgetCalc/Label/Label.js","components/BudgetCalc/Inputs/TextInput/TextInput.js","components/BudgetCalc/Inputs/DateInput/DateInput.js","components/BudgetCalc/Inputs/NumberInput/NumberInput.js","components/BudgetCalc/Button/Button.js","components/BudgetCalc/Inputs/ProductInputs/ProductInputs.js","redux/reducers/reducer.js","redux/store.js","redux/actions/actions.js","components/BudgetCalc/TableTools/SelectMode/SelectMode.js","components/BudgetCalc/TableTools/SelectSort/SelectSort.js","components/BudgetCalc/TableTools/ToolsContent/ToolsContent.js","components/BudgetCalc/Alert/Alert.js","components/BudgetCalc/TableTools/TableTools.js","components/BudgetCalc/Checkbox/Checkbox.js","components/BudgetCalc/BudgetTable/Tbody/Tbody.js","components/BudgetCalc/BudgetTable/Thead/Thead.js","components/BudgetCalc/BudgetTable/TableInfo/TableInfo.js","components/BudgetCalc/BudgetTable/Table/Table.js","components/BudgetCalc/NewGroupForm/TableInfo/TableInfo.js","components/BudgetCalc/NewGroupForm/Table-NG/Table.js","components/BudgetCalc/Groups/Selected/Selected.js","components/BudgetCalc/Groups/GroupsTable/GroupsTable.js","components/BudgetCalc/Groups/Groups.js","components/BudgetCalc/NewGroupForm/Inputs-NG/Inputs.js","components/BudgetCalc/NewGroupForm/NewGroup/NewGroup.js","components/BudgetCalc/Inputs/EmailInput/EmailInput.js","components/BudgetCalc/Inputs/PasswordInput/PasswordInput.js","components/BudgetCalc/Account/Account.js","components/BudgetCalc/SignIn/SignIn.js","containers/BudgetCalc/BudgetCalc.js","components/BudgetCalc/Header/Header.js","containers/App.js","serviceWorker.js","index.js"],"names":["Label","props","className","htmlFor","id","label","TextInput","type","onChange","saveValue","placeholder","value","DateInput","NumberInput","Button","onClick","click","name","content","connect","state","types","budgetCalcTypes","onSubmit","saveProduct","handleInputValue","product","date","price","quantity","editClicked","initState","products","isChecked","productGroups","groupDate","groupTotalPrice","addNewGroupClicked","mode","productToEdit","signInClicked","accountClicked","store","createStore","action","payload","filter","prod","map","i","val","checked","group","sort","a","b","clicked","changeMode","accountClickedAction","bool","signInClickedAction","selectModeHandler","sorts","selectFilterHandler","index","key","ToolsContent","deleteProductsClicked","addNewGroupHandler","Alert","text","TableTools","e","setState","addedType","target","handleHover","hovered","handleHoverLeave","dispatch","event","deleteProducts","this","onMouseEnter","onMouseLeave","totalPrice","addTypeHandler","addTypeClickedHandler","addTypeClicked","React","Component","Checkbox","handleCheckboxChange","Tbody","prods","Thead","TableInfo","productsLength","Table","length","properties","editGroupClicked","removeProductFromGroup","Selected","GroupsTable","groups","selectedGroupHandler","deleteGroupHandler","Groups","selected","deleteGroup","groupsToDelete","selectedGroup","Number","editGroupHandler","addProductToGroup","handleGroupDateInputValue","handleProductInputValue","required","NewGroup","preventDefault","newGroupProducts","Math","floor","random","push","error","closeErrorAlert","dlt","splice","indexOf","getTotalPrice","saveGroupOfProducts","productGroup","closeNewGroup","EmailInput","PasswordInput","Account","saveInputValue","closeAccountHandler","editAccountHandler","alert","birthday","country","income","email","password","SignIn","closeSignInHandler","signInHandler","BudgetCalc","handleIsChecked","sortProducts","sortGroups","productsToDelete","selectedValue","totPrice","editProduct","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a57e2242.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Label.css'\r\n\r\nfunction Label(props) {\r\n    return (\r\n        <label className=\"input-label\"\r\n         htmlFor={props.id}>{props.label}</label>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport '../inputs.css'\r\nimport './TextInput.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction TextInput(props) {\r\n    return (\r\n        <div className=\"text-input-div\">\r\n            <Label id={props.id} label={props.label} />\r\n            <input type='text'\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                value={props.value} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput","import React from 'react'\r\nimport './DateInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction DateInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='date'\r\n                id={props.id}\r\n                value={props.value}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateInput\r\n","import React from 'react'\r\nimport './NumberInput.css'\r\nimport Label from '../../Label/Label'\r\nimport '../inputs.css'\r\n\r\nfunction NumberInput(props) {\r\n    return (\r\n        <div className='number-input-div'>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='number'\r\n                id={props.id}\r\n                value={props.value}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberInput\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button onClick={props.click} id='button' className={props.name}>{props.content}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './ProductInputs.css'\r\nimport { connect } from 'react-redux'\r\nimport TextInput from '../TextInput/TextInput'\r\nimport DateInput from '../DateInput/DateInput'\r\nimport NumberInput from '../NumberInput/NumberInput'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n        <form onSubmit={props.saveProduct}\r\n            className=\"budget-calc-inputs\">\r\n            <div className=\"bcalc-bigger-inputs\">\r\n                <TextInput saveValue={props.handleInputValue}\r\n                    label=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"product name\"\r\n                    value={props.product.name}\r\n                />\r\n                <DateInput saveValue={props.handleInputValue}\r\n                    label=\"date\"\r\n                    id=\"date\"\r\n                    placeholder=\"product date\"\r\n                    value={props.product.date}\r\n                />\r\n                <TextInput saveValue={props.handleInputValue}\r\n                    label=\"type\"\r\n                    id=\"type\"\r\n                    placeholder=\"product type\"\r\n                    value={props.product.type}\r\n                />\r\n            </div>\r\n            <div className=\"bcalc-smaller-inputs\">\r\n                <NumberInput saveValue={props.handleInputValue}\r\n                    label=\"price\"\r\n                    id=\"price\"\r\n                    placeholder=\"price\"\r\n                    value={props.product.price}\r\n                />\r\n                <NumberInput saveValue={props.handleInputValue}\r\n                    label=\"quantity\"\r\n                    id=\"quantity\"\r\n                    placeholder=\"quantity\"\r\n                    value={props.product.quantity}\r\n                />\r\n            </div>\r\n            <Button click={props.saveProduct}\r\n                content={props.editClicked ? \"Save\" : \"Submit\"}\r\n                name='products-submit-btn' />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        types: state.budgetCalcTypes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Inputs);","const initState = {\r\n    products: [\r\n        {\r\n            id: 25,\r\n            name: \"cheese\",\r\n            type: \"food\",\r\n            price: 150,\r\n            quantity: 1,\r\n            date: \"2020-01-01\",\r\n            isChecked: false\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"burger\",\r\n            type: \"food\",\r\n            price: 120,\r\n            quantity: 2,\r\n            date: \"2019-01-01\",\r\n            isChecked: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"coca cola\",\r\n            type: \"drinks\",\r\n            price: 60,\r\n            quantity: 5,\r\n            date: \"2020-06-01\",\r\n            isChecked: false\r\n        }\r\n    ],\r\n    productGroups: [\r\n        {\r\n            id: 0,\r\n            groupDate: \"2019-05-01\",\r\n            type: 'groceries',\r\n            groupTotalPrice: 500,\r\n            isChecked: false,\r\n            products: [\r\n                {\r\n                    id: 25,\r\n                    name: \"Burger\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    id: 255,\r\n                    name: \"Alva\",\r\n                    price: 100,\r\n                    quantity: 2\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 22,\r\n            groupDate: \"2020-01-01\",\r\n            type: \"electronics\",\r\n            groupTotalPrice: 600,\r\n            isChecked: false,\r\n            products: [\r\n                {\r\n                    id: 23,\r\n                    name: \"Phone\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    id: 233,\r\n                    name: \"Laptop\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    addNewGroupClicked: false,\r\n    mode: 'products',\r\n    productToEdit: {},\r\n    signInClicked: false,\r\n    accountClicked: false\r\n}\r\n\r\nexport function reducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"SAVE_PRODUCT\": {\r\n            return { ...state, products: [...state.products, action.payload] }\r\n        }\r\n        case \"EDIT_PRODUCT\": {\r\n            return {\r\n                ...state, products: state.products.filter(prod =>\r\n                    prod.id !== action.payload.id), productToEdit: action.payload\r\n            }\r\n        }\r\n        case \"HANDLE_IS_CHECKED\": {\r\n            return {\r\n                ...state, products: state.products.map((prod, i) => prod.name === action.val ? { ...prod, isChecked: action.checked } : prod)\r\n            }\r\n        }\r\n        case \"DELETE_PRODUCTS\": {\r\n            return {\r\n                ...state, products: state.products.filter(prod => { return !prod.isChecked }\r\n                )\r\n            }\r\n        }\r\n        case \"ADD_NEW_GROUP_CLICKED\": {\r\n            return { ...state, addNewGroupClicked: action.payload }\r\n        }\r\n        case \"CHANGE_MODE\": {\r\n            return { ...state, mode: action.payload }\r\n        }\r\n        case \"SAVE_GROUP\": {\r\n            return { ...state, productGroups: [...state.productGroups, action.payload] }\r\n        }\r\n        case \"DELETE_GROUP\": {\r\n            return { ...state, productGroups: state.productGroups.filter(group => group.id !== action.payload.id) }\r\n        }\r\n        case \"SORT_GROUPS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, productGroups: [...state.productGroups].sort((a, b) =>\r\n                    (a[val] > b[val]) ? 1 : ((b[val] > a[val]) ? -1 : 0))\r\n            }\r\n        }\r\n        case \"SORT_PRODUCTS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, products: [...state.products].sort((a, b) =>\r\n                    (a[val] > b[val]) ? 1 : ((b[val] > a[val]) ? -1 : 0))\r\n            }\r\n        }\r\n        case \"SIGN_IN_CLICKED\": {\r\n            return {\r\n                ...state,  signInClicked: action.payload}\r\n        }\r\n        case \"ACCOUNT_CLICKED\": {\r\n            return {\r\n                ...state,  accountClicked: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore} from 'redux'\r\nimport {reducer} from './reducers/reducer'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","export function saveProduct(product) {\r\n    return {\r\n        type: \"SAVE_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\nexport function editProduct(product) {\r\n    return {\r\n        type: \"EDIT_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport function handleIsChecked(val, checked) {\r\n    return {\r\n        type: \"HANDLE_IS_CHECKED\",\r\n        val: val,\r\n        checked: checked\r\n    }\r\n}\r\n\r\nexport function deleteProducts() {\r\n    return {\r\n        type: \"DELETE_PRODUCTS\"\r\n    }\r\n}\r\n\r\nexport function addNewGroupClicked(clicked) {\r\n    return {\r\n        type: \"ADD_NEW_GROUP_CLICKED\",\r\n        payload: clicked\r\n    }\r\n}\r\nexport function changeMode(mode) {\r\n    return {\r\n        type: \"CHANGE_MODE\",\r\n        payload: mode\r\n    }\r\n}\r\n\r\nexport function saveGroup(group) {\r\n    return {\r\n        type: \"SAVE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function deleteGroup(group) {\r\n    return {\r\n        type: \"DELETE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function sortGroups(val) {\r\n    return {\r\n        type: \"SORT_GROUPS\",\r\n        payload: val\r\n    }\r\n}\r\nexport function sortProducts(val) {\r\n    return {\r\n        type: \"SORT_PRODUCTS\",\r\n        payload: val\r\n    }\r\n}\r\nexport function accountClickedAction(bool) {\r\n    return {\r\n        type: \"ACCOUNT_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\nexport function signInClickedAction(bool) {\r\n    return {\r\n        type: \"SIGN_IN_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\n","import React from 'react'\r\nimport \"./SelectMode.css\"\r\nimport {connect} from 'react-redux'\r\n\r\nfunction SelectMode(props) {\r\n    return (\r\n        <div className=\"select-mode-div\" >\r\n            <label htmlFor=\"select-mode\">Select view mode</label>\r\n            <select id=\"select-mode\" className=\"select-mode\" onChange={props.selectModeHandler} value={props.mode}>\r\n                <option value=\"products\">Products </option>\r\n                <option value=\"groups\">Product groups</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectMode);","import React from 'react'\r\nimport './SelectSort.css'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SelectSort(props) {\r\n    var sorts;\r\n    if (props.mode === 'groups') {\r\n        sorts = [\"groupDate\", 'type', 'groupTotalPrice']\r\n    } else {\r\n        sorts = props.sorts\r\n    }\r\n    return (\r\n        <div className=\"select-sort-div\" >\r\n            <select id=\"sort\" className=\"type-select\" onChange={props.selectFilterHandler}>\r\n            <option value=\"default\" >Select sort</option>\r\n                {sorts.map((sort, index) => {\r\n                    return <option key={`sort${index}`} value={sort}>{sort}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectSort);","import React from 'react'\r\nimport './ToolsContent.css'\r\nimport Button from '../../Button/Button'\r\nimport SelectMode from '../SelectMode/SelectMode'\r\nimport SelectSort from '../SelectSort/SelectSort'\r\n\r\nfunction ToolsContent(props) {\r\n    return (\r\n        <div className=\"table-tools-content\">\r\n            <h1>Tools</h1>\r\n            <div className=\"filter-div\">\r\n                <SelectMode selectModeHandler={props.selectModeHandler} />\r\n                <SelectSort selectFilterHandler={props.selectFilterHandler}\r\n                    sorts={props.sorts} />\r\n            </div>\r\n            <Button click={props.deleteProductsClicked}\r\n                content='Delete selected items'\r\n                name='table-tools-btn'\r\n            />\r\n            <Button click={props.addNewGroupHandler}\r\n                content='Add a new group of products'\r\n                name='table-tools-btn' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolsContent;","import React from 'react'\r\nimport './Alert.css'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <main className=\"err-alert-main\">\r\n            <div className=\"err-alert-div\">\r\n                <h1>Error</h1>\r\n                <p>{props.text}</p>\r\n                <button onClick={props.click} className=\"close-err-alert-button\">Ok</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport './TableTools.css'\r\nimport store from '../../../redux/store'\r\nimport { addNewGroupClicked, changeMode, deleteProducts } from '../../../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport ToolsContent from './ToolsContent/ToolsContent'\r\nimport Alert from '../Alert/Alert'\r\n\r\nclass TableTools extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hovered: false,\r\n            sorts: [\"name\", \"type\", \"price\", \"quantity\", \"date\"],\r\n            addNewGroupClicked: false,\r\n            deleteProducts: false\r\n        }\r\n    }\r\n\r\n    handleInputValue = (e) => {\r\n        this.setState({ addedType: e.target.value })\r\n    }\r\n\r\n    handleHover = () => {\r\n        this.setState({ hovered: true })\r\n    }\r\n\r\n    handleHoverLeave = () => {\r\n        this.setState({ hovered: false })\r\n    }   \r\n\r\n    addNewGroupHandler = () => {\r\n        store.dispatch(addNewGroupClicked(!this.state.addNewGroupClicked))\r\n        store.dispatch(changeMode('groups'))\r\n    }\r\n\r\n    selectModeHandler = (event) => {\r\n        store.dispatch(changeMode(event.target.value))\r\n    }\r\n\r\n    deleteProductsClicked = () => {\r\n        this.setState({ deleteProducts: true })\r\n    }\r\n\r\n    deleteProducts = () => {\r\n        store.dispatch(deleteProducts())\r\n        this.setState({ deleteProducts: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.deleteProducts ? <Alert click={this.deleteProducts}\r\n                    text=\"You are about to delete several items. Are you sure?\" /> : null}\r\n                <div className={this.state.hovered ? \"table-tools-div table-tools-div-active\" : \"table-tools-div\"}\r\n                    onMouseEnter={this.handleHover}\r\n                    onMouseLeave={this.handleHoverLeave} >\r\n                    {this.state.hovered ?\r\n                        <ToolsContent deleteProductsClicked={this.deleteProductsClicked}\r\n                            totalPrice={this.props.totalPrice}\r\n                            selectFilterHandler={this.props.selectFilterHandler}\r\n                            handleInputValue={this.handleInputValue}\r\n                            addTypeHandler={this.addTypeHandler}\r\n                            addTypeClickedHandler={this.addTypeClickedHandler}\r\n                            addTypeClicked={this.state.addTypeClicked}\r\n                            sorts={this.state.sorts}\r\n                            addNewGroupHandler={this.addNewGroupHandler}\r\n                            selectModeHandler={this.selectModeHandler}\r\n                        />\r\n                        :\r\n                        <div className=\"before-hover-div\">\r\n                            <p><i className=\"fas fa-tools\"></i></p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        types: state.budgetCalcTypes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TableTools);","import React from 'react'\r\nimport './Checkbox.css'\r\n\r\nfunction Checkbox(props) {\r\n        return (          \r\n                <input value={props.value}\r\n                    onChange={props.handleCheckboxChange}\r\n                    className=\"checkbox\" type=\"checkbox\" checked={props.checked} />\r\n        )\r\n}\r\n\r\nexport default Checkbox;","import React from 'react'\r\nimport './Tbody.css'\r\nimport Checkbox from '../../Checkbox/Checkbox'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction Tbody(props) {\r\n    const products = props.products.map((prod, i) => {\r\n        return (\r\n            <tr key={prod + i} className=\"product-tr\">\r\n                <td id=\"checkbox-td\">\r\n                    <Checkbox handleCheckboxChange={(e) => props.handleCheckboxChange(e)}\r\n                        prods={props.products}\r\n                        i={i}\r\n                        checked={prod.isChecked}\r\n                        value={prod.name}\r\n                    />\r\n                </td>\r\n                <td>{prod.name}</td>\r\n                <td>{prod.type}</td>\r\n                <td className=\"number-td\">{prod.quantity >= 1 ? (prod.price * prod.quantity) : prod.price}\r\n                    {prod.quantity >= 1 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                <td className=\"number-td\">{prod.quantity}</td>\r\n                <td>{prod.date}</td>\r\n                <td id=\"edit-td\">\r\n                    <Button click={() => props.productToEdit(prod)}\r\n                        content='Edit'\r\n                        name={props.editClicked ? \"budg-edit-btn budg-edit-btn-disabled \" : \"budg-edit-btn\"} />\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n        <tbody>\r\n            {products}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Tbody;","import React from 'react'\r\nimport './Thead.css'\r\n\r\nfunction Thead(props) {\r\n    return (\r\n        <div className=\"top-table\">\r\n                <ul>\r\n                    <li id=\"name-li\">Name</li>\r\n                    <li id=\"type-li\">Type</li>\r\n                    <li id=\"price-li\">Price</li>\r\n                    <li id=\"quantity-li\">Quantity</li>\r\n                    <li id=\"date-li\">Date</li>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thead;","import React from 'react'\r\nimport './TableInfo.css'\r\n\r\nfunction TableInfo(props) {\r\n    return (\r\n        <div className=\"table-info-div\">\r\n            <p className=\"price-p\">Total price: <span>{props.totalPrice}</span></p>\r\n            <p className=\"price-p\">Number of products: <span>{props.productsLength}</span></p>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableInfo","import React from 'react'\r\nimport './Table.css'\r\nimport Tbody from '../Tbody/Tbody'\r\nimport Thead from '../Thead/Thead'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <div className=\"table-div\">\r\n            <h1>Products</h1>\r\n            <TableInfo totalPrice={props.totalPrice}\r\n                productsLength={props.products.length}\r\n                selectModeHandler={props.selectModeHandler}\r\n            />\r\n            <Thead properties={props.properties} />\r\n            <div className=\"products-div\">\r\n                <table className=\"budg-table\">\r\n                    <Tbody products={props.products}\r\n                        productToEdit={props.productToEdit}\r\n                        handleCheckboxChange={props.handleCheckboxChange}\r\n                        editClicked={props.editClicked}\r\n                    />\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport './TableInfo.css'\r\n\r\nfunction TableInfo(props) {\r\n    return (\r\n        <main className=\"ng-info-main\">\r\n          <p>Number of products: <span>{props.productsLength}</span></p>   \r\n          <p>Total price: <span>{props.totalPrice}</span></p>   \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TableInfo ","import React from 'react'\r\nimport './Table.css'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Table(props) {\r\n        var prods = props.products.map((prod, i) => {\r\n            return (\r\n                <tr key={prod.name + i}\r\n                    className=\"ng-new-prod-tr\">\r\n                    <td>{prod.name}</td>\r\n                    <td>{prod.quantity !== 0 ? (prod.price * prod.quantity) : prod.price}\r\n                        {prod.quantity !== 0 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                    <td>{prod.quantity}</td>\r\n                    {!props.addNewGroupClicked ? null :\r\n                        <td className=\"x-td\" onClick={() => props.removeProductFromGroup(prod.id)}>X</td>}\r\n                </tr>\r\n            )\r\n        })\r\n    return (\r\n        <>\r\n            <TableInfo productsLength={props.products.length}\r\n                totalPrice={props.totalPrice}\r\n            />\r\n            <table className=\"ng-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        {!props.addNewGroupClicked ? null :\r\n                            <th></th>}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"ng-table-body\">\r\n                    {prods}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode,\r\n        addNewGroupClicked: state.addNewGroupClicked,\r\n        productToEdit: state.productToEdit,\r\n        editGroupClicked: state.editGroupClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)","import React from 'react'\r\nimport './Selected.css'\r\nimport Table from '../../NewGroupForm/Table-NG/Table'\r\n\r\nfunction Selected(props) {\r\n\r\n    return (\r\n        <div className=\"selected-group\">\r\n            \r\n            <h1>Products</h1>\r\n            <Table products={props.products}\r\n                totalPrice={props.totalPrice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selected;","import React from 'react'\r\nimport './GroupsTable.css'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction GroupsTable(props) {\r\n    var groups = props.groups.map((group, i) => {\r\n        return (\r\n            <tr key={group + i} className=\"group-tr\">\r\n                <td>{group.groupDate}</td>\r\n                <td>{group.type}</td>\r\n                <td>{group.groupTotalPrice}</td>\r\n                <td onClick={() => props.selectedGroupHandler(group)} className=\"expand-td\">\r\n                   <span>Open</span>  <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n                </td>\r\n                <td id=\"edit-td\">\r\n                    <Button click={() => props.deleteGroupHandler(group)}\r\n                        content='Delete'\r\n                        name='budg-edit-btn budg-dlt-btn' />\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n        <table className=\"groups-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Total Price</th>\r\n                    <th>Products</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {groups}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default GroupsTable;","import React from 'react'\r\nimport './Groups.css'\r\nimport { connect } from 'react-redux'\r\nimport Selected from './Selected/Selected'\r\nimport Button from '../Button/Button'\r\nimport GroupsTable from './GroupsTable/GroupsTable'\r\nimport store from '../../../redux/store'\r\nimport { addNewGroupClicked, deleteGroup } from '../../../redux/actions/actions'\r\n\r\nclass Groups extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: [],\r\n            groupsToDelete: []\r\n        }\r\n    }\r\n\r\n    selectedGroupHandler = (group) => {\r\n        this.setState({ selected: group.products })\r\n    }\r\n\r\n    addNewGroupHandler = () => {\r\n        store.dispatch(addNewGroupClicked(!this.state.addNewGroupClicked))\r\n    }\r\n\r\n    deleteGroupHandler = (group) => {\r\n        store.dispatch(deleteGroup(group))\r\n    }\r\n\r\n    render() {\r\n        var selectedGroup = this.state.selected\r\n        var totalPrice = 0\r\n        for (var i = 0; i < selectedGroup.length; i++) {\r\n            if (selectedGroup[i].quantity > 1) {\r\n                totalPrice += (selectedGroup[i].quantity * Number(selectedGroup[i].price))\r\n            } else if (selectedGroup[i].quantity < 2) {\r\n                totalPrice += Number(selectedGroup[i].price)\r\n            }\r\n        }\r\n        return (\r\n            <main className=\"groups-main\">\r\n                <h1>Groups</h1>\r\n                <div className=\"groups-content\">\r\n                    <div className=\"groups-div\">\r\n                        <GroupsTable groups={this.props.groups}\r\n                            selectedGroupHandler={this.selectedGroupHandler}\r\n                            deleteGroupHandler={this.deleteGroupHandler}\r\n                            editGroupHandler={this.editGroupHandler}\r\n                            totalPrice={totalPrice}\r\n                        />\r\n                    </div>\r\n                    <div className=\"groups-right-div\">\r\n                        <Button click={this.addNewGroupHandler}\r\n                            content='Add a new group of products'\r\n                            name='table-tools-btn' />\r\n                        <Selected products={this.state.selected}\r\n                            totalPrice={totalPrice}\r\n                            addNewGroupHandler={this.addNewGroupHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: state.productGroups\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Groups)","import React from 'react'\r\nimport './Inputs.css'\r\nimport Button from '../../Button/Button'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n        <form onSubmit={props.addProductToGroup}>\r\n            <div className=\"ng-date-div\">\r\n                <div>\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input onChange={props.handleGroupDateInputValue} type=\"date\" id=\"date\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input onChange={props.handleGroupDateInputValue} type=\"text\" id=\"type\" placeholder=\"Enter the type of your products\" />\r\n                </div>\r\n\r\n            </div>\r\n            <input onChange={props.handleProductInputValue}\r\n                type=\"text\" id=\"name\" placeholder=\"Enter product name\"\r\n                value={props.product.name} />\r\n\r\n            <div className=\"ng-price-quantity-div\">\r\n                <label htmlFor=\"price\">Price:</label>\r\n                <input type=\"number\" id=\"price\"\r\n                    onChange={props.handleProductInputValue}\r\n                    placeholder=\"Enter product price\"\r\n                    value={props.product.price} required />\r\n                <label htmlFor=\"quantity\">Quantity:</label>\r\n                <input type=\"number\" id=\"quantity\"\r\n                    onChange={props.handleProductInputValue}\r\n                    placeholder=\"Enter product quantity\"\r\n                    value={props.product.quantity} />\r\n            </div>\r\n            <Button click={props.addProductToGroup}\r\n                content='Add product to group'\r\n                name=\"ng-btn\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productToEdit: state.productToEdit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Inputs)","import React from 'react'\r\nimport './NewGroup.css'\r\nimport Inputs from '../Inputs-NG/Inputs'\r\nimport Table from '../Table-NG/Table'\r\nimport Button from '../../Button/Button'\r\nimport store from '../../../../redux/store'\r\nimport { addNewGroupClicked, saveGroup } from '../../../../redux/actions/actions'\r\nimport Alert from '../../Alert/Alert'\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            date: '',\r\n            type: '',\r\n            newGroupProducts: [],\r\n            product: {\r\n                name: '',\r\n                price: 0,\r\n                quantity: 1\r\n            },\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleProductInputValue = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            product: { ...this.state.product, [event.target.id]: event.target.value },\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleGroupDateInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    addProductToGroup = (e) => {\r\n        e.preventDefault()\r\n        var product = this.state.product\r\n        if (product.name !== '' && product.price !== 0 && product.quantity > 0) {\r\n            var prods = this.state.newGroupProducts\r\n            product.id = Math.floor(Math.random() * 1000)\r\n            prods.push(product)\r\n            this.setState({\r\n                newGroupProducts: prods,\r\n                product: { name: '', price: 0, quantity: 1 }\r\n            })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({error:false})\r\n    }\r\n\r\n    removeProductFromGroup = (id) => {\r\n        var products = this.state.newGroupProducts\r\n        var dlt = products.filter((prod, i) => prod.id === id)\r\n        products.splice(products.indexOf(dlt[0]), 1)\r\n        this.setState({ newGroupProducts: products })\r\n    }\r\n\r\n    getTotalPrice =(products) => {\r\n        let totalPrice = 0;\r\n        for (var i = 0; i < products.length; i++) {\r\n            if (products[i].quantity > 1) {\r\n                totalPrice += (products[i].quantity * Number(products[i].price))\r\n            } else {\r\n                totalPrice += Number(products[i].price)\r\n            }\r\n        }\r\n        return totalPrice;\r\n    }\r\n\r\n    saveGroupOfProducts = () => {\r\n        if (this.state.type !== '' && this.state.date !== '') { \r\n        var products = this.state.newGroupProducts\r\n        var totalPrice = this.getTotalPrice(products);\r\n        const productGroup = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            groupDate: this.state.date,\r\n            type: this.state.type,\r\n            groupTotalPrice: totalPrice,\r\n            products: this.state.newGroupProducts\r\n        }\r\n        this.setState({ newGroupProducts: [], type: '', date: '' })\r\n        store.dispatch(addNewGroupClicked(false))\r\n        store.dispatch(saveGroup(productGroup))\r\n    } else {\r\n        this.setState({error: true})\r\n    }\r\n}\r\n\r\ncloseNewGroup = () => {\r\n    store.dispatch(addNewGroupClicked(false))\r\n}\r\n\r\nrender() {\r\n    var products = this.state.newGroupProducts\r\n    var totalPrice = this.getTotalPrice(products)\r\n    return (\r\n        <main className=\"ng-main\">\r\n            {this.state.error ? <Alert click={this.closeErrorAlert} text=\"Please fill up every field!\" /> :null}\r\n            <div className=\"ng-div\">\r\n                <h3>You are creating a new group of products</h3>\r\n                <Inputs addProductToGroup={this.addProductToGroup}\r\n                    handleGroupDateInputValue={this.handleGroupDateInputValue}\r\n                    handleProductInputValue={this.handleProductInputValue}\r\n                    product={this.state.product} />\r\n                <div className=\"ng-prods-dv\">\r\n                    <Table products={this.state.newGroupProducts}\r\n                        totalPrice={totalPrice}\r\n                        removeProductFromGroup={this.removeProductFromGroup}\r\n                    />\r\n                    <Button click={this.closeNewGroup}\r\n                        content='Close'\r\n                        name='ng-btn ng-close-btn' />\r\n                    <Button click={this.saveGroupOfProducts}\r\n                        content='Save group'\r\n                        name='ng-btn' />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default NewGroup; ","import React from 'react'\r\nimport './EmailInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\n\r\nfunction EmailInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='email'\r\n                id={props.id}\r\n                value={props.value}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailInput\r\n","import React from 'react'\r\nimport './PasswordInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction PasswordInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='password'\r\n                id={props.id}\r\n                value={props.value}\r\n                placeholder={props.placeholder}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordInput\r\n","import React, { Component } from 'react'\r\nimport './Account.css'\r\nimport TextInput from '../Inputs/TextInput/TextInput'\r\nimport DateInput from '../Inputs/DateInput/DateInput'\r\nimport EmailInput from '../Inputs/EmailInput/EmailInput'\r\nimport PasswordInput from '../Inputs/PasswordInput/PasswordInput'\r\nimport NumberInput from '../Inputs/NumberInput/NumberInput'\r\nimport Button from '../Button/Button'\r\nimport { accountClickedAction } from '../../../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            birthday: '',\r\n            country: '',\r\n            income: 0,\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    saveInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    closeAccountHandler = () => {\r\n        this.props.accountClickedAction(false)\r\n    }\r\n\r\n    editAccountHandler = () => {\r\n            alert(\"not available\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"account-main\">\r\n                <div className=\"account-div\">\r\n                    <h1>Account</h1>\r\n                    <TextInput saveValue={this.saveInputValue} id=\"name\" label='full name' placeholder=\"full name\" value={this.state.name} />\r\n                    <DateInput saveValue={this.saveInputValue} id=\"birthday\" label='date of birth' placeholder=\"date of birth\" value={this.state.birthday} />\r\n                    <TextInput saveValue={this.saveInputValue} id=\"country\" label='country' placeholder=\"country\" value={this.state.country} />\r\n                    <NumberInput saveValue={this.saveInputValue} id=\"income\" label='income' placeholder=\"income\" value={this.state.income} />\r\n                    <EmailInput saveValue={this.saveInputValue} id=\"email\" label='email' placeholder=\"email\" value={this.state.email} />\r\n                    <PasswordInput saveValue={this.saveInputValue} id=\"password\" label='password' placeholder=\"password\" value={this.state.password} />\r\n                    <div className=\"btns-div\">\r\n                        <Button click={this.closeAccountHandler}\r\n                            content='Close'\r\n                            name='ng-btn' />\r\n                        <Button click={this.editAccountHandler}\r\n                            content='Edit'\r\n                            name='ng-btn' />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        accountClickedAction: (bool) => dispatch(accountClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Account)","import React, { Component } from 'react'\r\nimport './SignIn.css'\r\nimport Button from '../Button/Button'\r\nimport EmailInput from '../Inputs/EmailInput/EmailInput'\r\nimport PasswordInput from  '../Inputs/PasswordInput/PasswordInput'\r\nimport {signInClickedAction} from '../../../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n            this.state = {\r\n                email: '',\r\n                password: ''\r\n            }\r\n    }\r\n\r\n    saveInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value})\r\n    }\r\n\r\n    closeSignInHandler = () => {\r\n        this.props.signInClickedAction(false)\r\n    }\r\n\r\n    signInHandler = () => {\r\n        alert(\"not available\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-main\">\r\n                <div className=\"sign-in-div\"> \r\n                    <h1>sign in</h1>\r\n                    <EmailInput saveValue={this.saveInputValue} id=\"email\" label='email' placeholder=\"email\"/>\r\n                    <PasswordInput saveValue={this.saveInputValue} id=\"password\" label='password' placeholder=\"password\"/>\r\n                    <div className=\"btns-div\">\r\n                        <Button click={this.closeSignInHandler}\r\n                            content='Close'\r\n                            name='ng-btn' />\r\n                        <Button click={this.signInHandler}\r\n                            content='Edit'\r\n                            name='ng-btn' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch ) {\r\n    return { \r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import React from 'react'\r\nimport './BudgetCalc.css'\r\nimport ProductInputs from '../../components/BudgetCalc/Inputs/ProductInputs/ProductInputs'\r\nimport TableTools from '../../components/BudgetCalc/TableTools/TableTools'\r\nimport Table from '../../components/BudgetCalc/BudgetTable/Table/Table'\r\nimport Groups from '../../components/BudgetCalc/Groups/Groups'\r\nimport { connect } from 'react-redux'\r\nimport store from '../../redux/store'\r\nimport { sortGroups, sortProducts, saveProduct, editProduct, handleIsChecked } from '../../redux/actions/actions'\r\nimport Alert from '../../components/BudgetCalc/Alert/Alert'\r\nimport NewGroup from '../../components/BudgetCalc/NewGroupForm/NewGroup/NewGroup'\r\nimport Account from '../../components/BudgetCalc/Account/Account'\r\nimport SignIn from '../../components/BudgetCalc/SignIn/SignIn'\r\nclass BudgetCalc extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            product: {\r\n                id: '',\r\n                name: '',\r\n                type: '',\r\n                price: 0,\r\n                quantity: 1,\r\n                date: ''\r\n            },\r\n            products: props.products,\r\n            isChecked: false,\r\n            productsToDelete: [],\r\n            editClicked: false,\r\n            selectedValue: 'name',\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleInputValue = (event) => {\r\n        this.setState({ ...this.state, product: { ...this.state.product, [event.target.id]: event.target.value } })\r\n    }\r\n\r\n    saveProduct = (e) => {\r\n        var product = this.state.product\r\n        e.preventDefault()\r\n        if (product.name !== '' && product.type !== '' && product.price !== 0 && product.quantity >= 1 && product.date !== '') {\r\n            product.id = Math.floor(Math.random() * 1000)\r\n            product.isChecked = false\r\n            store.dispatch(saveProduct(product))\r\n            this.setState({\r\n                product: { id: '', name: '', type: '', price: 0, quantity: 1, date: '' },\r\n                editClicked: false\r\n            })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    handleCheckboxChange = (e) => {\r\n        let val = e.target.value\r\n        let checked = e.target.checked\r\n        store.dispatch(handleIsChecked(val, checked))\r\n    }\r\n\r\n    productToEdit = (prod) => {\r\n        store.dispatch(editProduct(prod))\r\n        this.setState({\r\n            editClicked: true,\r\n            product: prod\r\n        })\r\n    }\r\n\r\n    selectFilterHandler = (e) => {\r\n        var val = e.target.value\r\n        if (this.props.mode === 'products') {\r\n            store.dispatch(sortProducts(val))\r\n        } else {\r\n            store.dispatch(sortGroups(val))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var totPrice = 0;\r\n        for (var i = 0; i < this.state.products.length; i++) {\r\n            if (this.state.products[i].quantity >= 1) {\r\n                totPrice += (this.state.products[i].quantity * Number(this.state.products[i].price))\r\n            } else if (this.state.products[i].quantity < 1) {\r\n                totPrice += Number(this.state.products[i].price)\r\n            }\r\n        }\r\n        return (\r\n            <main className=\"budget-calc-main\">\r\n            {this.props.accountClicked ? <Account/> : null}\r\n            {this.props.signInClicked ? <SignIn/> : null}\r\n                {this.props.addNewGroupClicked ? <NewGroup /> : null}\r\n                {this.state.error ? <Alert click={this.closeErrorAlert}\r\n                    text=\"Please fill up every field!\"\r\n                /> : null}\r\n                {this.props.mode === \"products\" ?\r\n                    <ProductInputs saveProduct={this.saveProduct}\r\n                        handleInputValue={this.handleInputValue}\r\n                        product={this.state.product}\r\n                        editClicked={this.state.editClicked}\r\n                        editProduct={this.editProduct}\r\n                        types={this.state.types}\r\n                    /> : null}\r\n                <div className=\"budget-calc-content-div\">\r\n                    {this.props.mode === \"products\" ?\r\n                        <Table\r\n                            properties={this.state.properties}\r\n                            products={this.props.products}\r\n                            productToEdit={this.productToEdit}\r\n                            handleCheckboxChange={this.handleCheckboxChange}\r\n                            editClicked={this.state.editClicked}\r\n                            totalPrice={totPrice}\r\n                        /> : <Groups />}\r\n                    <TableTools\r\n                        deleteProducts={this.deleteProducts}\r\n                        selectFilterHandler={this.selectFilterHandler}\r\n                    />\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode,\r\n        products: state.products,\r\n        groups: state.productGroups,\r\n        addNewGroupClicked: state.addNewGroupClicked,\r\n        accountClicked: state.accountClicked,\r\n        signInClicked: state.signInClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BudgetCalc)","import React from 'react'\r\nimport './Header.css'\r\nimport {accountClickedAction, signInClickedAction} from '../../../redux/actions/actions'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction Header(props) {\r\n\r\n    const accountClickedHandler = () => {\r\n        props.accountClickedAction(true)\r\n    }\r\n    const signInClickedHandler = () => {\r\n        props.signInClickedAction(true)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"header-main\">\r\n            <h1 className=\"header-title\">Budget Architect</h1>\r\n            <ul className=\"header-ul\">\r\n                <li onClick={accountClickedHandler}>Account</li>\r\n                <li onClick={signInClickedHandler}>Sign In</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        accountClickedAction: (bool) => dispatch(accountClickedAction(bool)),\r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);","import React from 'react';\r\nimport './App.css';\r\nimport BudgetCalc from './BudgetCalc/BudgetCalc'\r\nimport Header from '../components/BudgetCalc/Header/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Header/>\r\n        <BudgetCalc/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}