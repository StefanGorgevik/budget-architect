{"version":3,"sources":["components/BudgetCalc/Label/Label.js","components/BudgetCalc/Inputs/TextInput/TextInput.js","components/BudgetCalc/Inputs/DateInput/DateInput.js","components/BudgetCalc/Inputs/NumberInput/NumberInput.js","components/BudgetCalc/Button/Button.js","components/BudgetCalc/ProductInputs/ProductInputs.js","redux/actions/groupsActions.js","components/BudgetCalc/TableTools/SelectSort/SelectSort.js","components/BudgetCalc/TableTools/ToolsContent/ToolsContent.js","components/BudgetCalc/TableTools/TableTools.js","components/BudgetCalc/BudgetTable/Tbody/Tbody.js","components/BudgetCalc/BudgetTable/Thead/Thead.js","redux/actions/productsActions.js","redux/actions/userActions.js","components/BudgetCalc/Alert/Alert.js","components/BudgetCalc/Loading/Loading.js","components/BudgetCalc/BudgetTable/Table/Table.js","components/BudgetCalc/NewGroupForm/TableInfo/TableInfo.js","components/BudgetCalc/NewGroupForm/Table-NG/Table.js","components/BudgetCalc/Groups/Selected/Selected.js","components/BudgetCalc/Groups/GroupsTable/GroupsTable.js","components/BudgetCalc/Groups/Groups.js","components/BudgetCalc/Select/Select.js","components/BudgetCalc/HeaderInfo/HeaderInfo.js","components/BudgetCalc/NewGroupForm/Inputs-NG/Inputs.js","components/BudgetCalc/NewGroupForm/NewGroup/NewGroup.js","components/BudgetCalc/Inputs/EmailInput/EmailInput.js","components/BudgetCalc/Inputs/PasswordInput/PasswordInput.js","components/BudgetCalc/Account/Account.js","components/BudgetCalc/SignIn/SignIn.js","containers/BudgetCalc/BudgetCalc.js","components/BudgetCalc/Header/Header.js","containers/App.js","serviceWorker.js","redux/reducers/userReducer.js","redux/reducers/productsReducer.js","redux/reducers/groupsReducer.js","redux/store.js","index.js"],"names":["Label","props","className","htmlFor","id","label","TextInput","type","onChange","saveValue","placeholder","value","DateInput","toString","slice","min","max","NumberInput","required","Button","onClick","click","name","content","connect","state","types","budgetCalcTypes","onSubmit","saveProduct","handleInputValue","product","date","price","quantity","editClicked","editProduct","getGroupsAction","groups","payload","addNewGroupClicked","clicked","isGroupSavedAction","bool","groupToEditAction","group","editGroupClickedAction","SelectSort","sorts","mode","selectSort","map","sort","index","key","ToolsContent","TableTools","handleHover","setState","hovered","handleHoverLeave","this","onMouseEnter","onMouseLeave","React","Component","dispatch","Tbody","products","prod","i","productToEdit","productToDelete","_id","Thead","getProducts","isProductSavedAction","accountClickedAction","signInClickedAction","signOutClickedAction","Alert","text","accept","show","decline","Loading","Table","deleteProductClicked","deleteProduct","prodID","axios","delete","headers","localStorage","getItem","then","res","catch","err","console","log","closeAlert","isProductSaved","getAllProducts","productsLoaded","length","properties","handleCheckboxChange","productsReducer","TableInfo","productsLength","totalPrice","groupsReducer","prods","removeProductFromGroup","Selected","closeSelectedGroup","editGroup","selectedGroup","GroupsTable","groupsLoaded","isGroupSaved","getAllGroups","groupsLength","selectedGroupHandler","editGroupHandler","deleteGroupHandler","Groups","selectedProducts","groupSelected","addNewGroupHandler","groupToDelete","deleteClicked","acceptDelete","deleteGroup","selected","closeSelectedGroupHandler","productsTotalPrice","Number","Select","selectOption","selectedMonth","defaultChecked","options","option","HeaderInfo","year","Date","getFullYear","years","Array","from","val","reverse","surplus","groupsTotalPrice","isMonthSelected","groupsProductsNumber","selectFilter","getAll","Inputs","addProductToGroup","handleGroupDateInputValue","dateValue","handleProductInputValue","URL","NewGroup","event","target","e","preventDefault","newGroupProducts","Math","floor","random","push","error","closeErrorAlert","dlt","filter","splice","indexOf","getTotalPrice","saveGroupOfProducts","post","userID","saveGroup","data","groupID","groupToEdit","put","editGroupAction","closeNewGroup","isGroupEditClicked","EmailInput","PasswordInput","Account","getUserToEdit","get","income","email","password","saveInputValue","closeAccountHandler","registerUserHandler","setItem","jwt","window","location","reload","response","status","userExists","editUserHandler","choseSignInHandler","isUserLogged","userToEdit","userReducer","SignIn","closeSignInHandler","signInHandler","userNotFound","choseRegisterHandler","BudgetCalc","saveProductHandler","productToEditHandler","prodToEditID","editProductHandler","selectSortHandler","sortProducts","sortGroups","signOutHandler","clear","declineSignOutHandler","getAllProductsHandler","getAllGroupsHandler","selectFilterHandler","month","selectedYear","getFilteredProductsHandler","mon","yr","parseInt","dateFrom","getTime","dateTo","one","two","requestOne","requestTwo","all","spread","responseOne","responseTwo","titleClickedHandler","seeAllHandler","selectedValue","groupProductsLength","accountClicked","signInClicked","signOutClicked","deleteProducts","App","Boolean","hostname","match","initState","reducer","combineReducers","action","a","b","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d4ff8073.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Label.css'\r\n\r\nfunction Label(props) {\r\n    return (\r\n        <label className=\"input-label\"\r\n         htmlFor={props.id}>{props.label}</label>\r\n    )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport '../inputs.css'\r\nimport './TextInput.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction TextInput(props) {\r\n    return (\r\n        <div className=\"text-input-div\">\r\n            <Label id={props.id} label={props.label} />\r\n            <input type='text'\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                id={props.id}\r\n                placeholder={props.placeholder}\r\n                value={props.value} \r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextInput","import React from 'react'\r\nimport './DateInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction DateInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='date'\r\n                id={props.id}\r\n                value={props.value ? props.value.toString().slice(0, 10) : ''}\r\n                min=\"2020-01-01\" max=\"2020-12-31\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DateInput\r\n","import React from 'react'\r\nimport './NumberInput.css'\r\nimport Label from '../../Label/Label'\r\nimport '../inputs.css'\r\n\r\nfunction NumberInput(props) {\r\n    return (\r\n        <div className='number-input-div'>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='number'\r\n                id={props.id}\r\n                value={props.value}\r\n                required\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NumberInput\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button onClick={props.click} id='button' className={props.name}>{props.content}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './ProductInputs.css'\r\nimport { connect } from 'react-redux'\r\nimport TextInput from '../Inputs/TextInput/TextInput'\r\nimport DateInput from '../Inputs/DateInput/DateInput'\r\nimport NumberInput from '../Inputs/NumberInput/NumberInput'\r\nimport Button from '../Button/Button'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n        <form onSubmit={props.saveProduct}\r\n            className=\"budget-calc-inputs\">\r\n            <div className=\"bcalc-bigger-inputs\">\r\n                <TextInput saveValue={props.handleInputValue}\r\n                    label=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"product name\"\r\n                    value={props.product.name}\r\n                />\r\n                <DateInput saveValue={props.handleInputValue}\r\n                    label=\"date\"\r\n                    id=\"date\"\r\n                    placeholder=\"product date\"\r\n                    value={props.product.date}\r\n                />\r\n                <TextInput saveValue={props.handleInputValue}\r\n                    label=\"type\"\r\n                    id=\"type\"\r\n                    placeholder=\"product type\"\r\n                    value={props.product.type}\r\n                />\r\n            </div>\r\n            <div className=\"bcalc-smaller-inputs\">\r\n                <NumberInput saveValue={props.handleInputValue}\r\n                    label=\"price\"\r\n                    id=\"price\"\r\n                    placeholder=\"price\"\r\n                    value={props.product.price}\r\n                />\r\n                <NumberInput saveValue={props.handleInputValue}\r\n                    label=\"quantity\"\r\n                    id=\"quantity\"\r\n                    placeholder=\"quantity\"\r\n                    value={props.product.quantity}\r\n                />\r\n            </div>\r\n            {!props.editClicked ?\r\n                <Button click={props.saveProduct}\r\n                    content=\"Submit\"\r\n                    name='products-submit-btn' /> :\r\n                <Button click={props.editProduct}\r\n                    content=\"Save\"\r\n                    name='products-submit-btn' />}\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        types: state.budgetCalcTypes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Inputs);","export function getGroupsAction(groups) {\r\n    return {\r\n        type: \"GET_GROUPS\",\r\n        payload: groups\r\n    }\r\n}\r\n\r\nexport function addNewGroupClicked(clicked) {\r\n    return {\r\n        type: \"ADD_NEW_GROUP_CLICKED\",\r\n        payload: clicked\r\n    }\r\n}\r\n\r\nexport function saveGroup(group) {\r\n    return {\r\n        type: \"SAVE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function deleteGroup(group) {\r\n    return {\r\n        type: \"DELETE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function sortGroups(val) {\r\n    return {\r\n        type: \"SORT_GROUPS\",\r\n        payload: val\r\n    }\r\n}\r\n\r\nexport function isGroupSavedAction(bool) {\r\n    return {\r\n        type: \"IS_GROUP_SAVED\",\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport function groupToEditAction(group) {\r\n    return {\r\n        type: \"GROUP_TO_EDIT\",\r\n        payload: group\r\n    }\r\n}\r\nexport function editGroupClickedAction(bool) {\r\n    return {\r\n        type: \"EDIT_GROUP_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport function editGroupAction(group) {\r\n    return {\r\n        type: \"EDIT_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './SelectSort.css'\r\n\r\nfunction SelectSort(props) {\r\n    var mode = props.mode\r\n    var sorts;\r\n    if (mode === 'groups') {\r\n        sorts = [\"date\", 'totalPrice']\r\n    } else {\r\n        sorts =  [\"name\", \"type\", \"price\", \"quantity\", \"date\"]\r\n    }\r\n\r\n    return (\r\n        <div className=\"select-sort-div\" >\r\n            <select id=\"sort\" className=\"type-select\" onChange={props.selectSort}>\r\n            <option value=\"default\" >Select sort {mode === 'products' ? 'ascending' : 'descending'}</option>\r\n                {sorts.map((sort, index) => {\r\n                    return <option key={`sort${index}`} value={sort}>{sort }</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SelectSort;","import React from 'react'\r\nimport './ToolsContent.css'\r\nimport Button from '../../Button/Button'\r\nimport SelectSort from '../SelectSort/SelectSort'\r\n\r\nfunction ToolsContent(props) {\r\n    return (\r\n        <div className=\"table-tools-content\">\r\n            <h1>Tools</h1>\r\n            <div className=\"filter-div\">\r\n                <SelectSort selectSort={props.selectSort}\r\n                    sorts={props.sorts}\r\n                    mode={props.mode}\r\n                />\r\n            </div>\r\n            <Button click={props.addNewGroupClicked}\r\n                content='Add a new group of products'\r\n                name='table-tools-btn' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolsContent;","import React from 'react'\r\nimport './TableTools.css'\r\nimport { addNewGroupClicked } from '../../../redux/actions/groupsActions'\r\nimport ToolsContent from './ToolsContent/ToolsContent'\r\nimport {connect} from 'react-redux'\r\n\r\nclass TableTools extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hovered: false\r\n        }\r\n    }\r\n\r\n    handleHover = () => {\r\n        this.setState({ hovered: true })\r\n    }\r\n\r\n    handleHoverLeave = () => {\r\n        this.setState({ hovered: false })\r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.hovered ? \"table-tools-div table-tools-div-active\" : \"table-tools-div\"}\r\n                    onMouseEnter={this.handleHover}\r\n                    onMouseLeave={this.handleHoverLeave} >\r\n                    {this.state.hovered ?\r\n                        <ToolsContent \r\n                            selectSort={this.props.selectSort}\r\n                            addNewGroupClicked={this.props.addNewGroupClicked}\r\n                            mode={this.props.mode}\r\n                        />\r\n                        :\r\n                        <div className=\"before-hover-div\">\r\n                            <p><i className=\"fas fa-tools\"></i></p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addNewGroupClicked: (bool) => dispatch(addNewGroupClicked(bool))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(TableTools);","import React from 'react'\r\nimport './Tbody.css'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction Tbody(props) {\r\n    var products = []\r\n    if (props.products) {\r\n        products = props.products.map((prod, i) => {\r\n            return (\r\n                <tr key={prod + i} className=\"product-tr\">\r\n                    <td>{prod.name}</td>\r\n                    <td>{prod.type}</td>\r\n                    <td className=\"number-td\">{prod.quantity >= 1 ? (prod.price * prod.quantity) : prod.price}\r\n                        {prod.quantity >= 1 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                    <td className=\"number-td\">{prod.quantity}</td>\r\n                    <td>{prod.date.toString().slice(0, 10)}</td>\r\n                    <td id=\"edit-td\">\r\n                        <Button click={() => props.productToEdit(prod)}\r\n                            content='Edit'\r\n                            name={props.editClicked ? \"budg-edit-btn budg-edit-btn-disabled\" : \"budg-edit-btn\"} />\r\n                    </td>\r\n                    <td id=\"edit-td\">\r\n                        <Button click={() => props.productToDelete(prod._id)}\r\n                            content='Delete'\r\n                            name=\"budg-edit-btn\" />\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <tbody>\r\n            {products}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Tbody;","import React from 'react'\r\nimport './Thead.css'\r\n\r\nfunction Thead(props) {\r\n    return (\r\n        <div className=\"top-table\">\r\n                <ul>\r\n                    <li id=\"name-li\">Name</li>\r\n                    <li id=\"type-li\">Type</li>\r\n                    <li id=\"price-li\">Price</li>\r\n                    <li id=\"quantity-li\">Quantity</li>\r\n                    <li id=\"date-li\">Date</li>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thead;","export function getProducts(products) {\r\n    return {\r\n        type: \"GET_PRODUCTS\",\r\n        payload: products\r\n    }\r\n}\r\n\r\nexport function saveProduct(product, ) {\r\n    return {\r\n        type: \"SAVE_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\nexport function isProductSavedAction( bool) {\r\n    return {\r\n        type: \"IS_PRODUCT_SAVED\",\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport function productToEdit(product) {\r\n    return {\r\n        type: \"PRODUCT_TO_EDIT\",\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport function editProduct(product) {\r\n    return {\r\n        type: \"EDIT_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\n\r\n\r\nexport function deleteProduct(id) {\r\n    return {\r\n        type: \"DELETE_PRODUCT\",\r\n        payload: id\r\n    }\r\n}\r\n\r\n\r\nexport function sortProducts(val) {\r\n    return {\r\n        type: \"SORT_PRODUCTS\",\r\n        payload: val\r\n    }\r\n}\r\n","export function accountClickedAction(bool) {\r\n    return {\r\n        type: \"ACCOUNT_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\nexport function signInClickedAction(bool) {\r\n    return {\r\n        type: \"SIGN_IN_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport function signOutClickedAction(bool) {\r\n    return {\r\n        type: \"SIGN_OUT_CLICKED\",\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport function editUserInfo(user) {\r\n    return {\r\n        type: \"EDIT_USER_INFO\",\r\n        payload: user\r\n    }\r\n}","import React from 'react'\r\nimport './Alert.css'\r\nimport Button from '../Button/Button'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <main className=\"err-alert-main\">\r\n            <div className=\"err-alert-div\">\r\n                <h1>Error</h1>\r\n                <p>{props.text}</p>\r\n                <Button click={props.accept}\r\n                        name=\"ng-btn\"\r\n                        content=\"OK\"\r\n                />\r\n                {props.show ?\r\n                <Button click={props.decline}\r\n                        name=\"ng-btn\"\r\n                        content=\"CLOSE\"\r\n                />\r\n                 : null}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport './Loading.css'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport './Table.css'\r\nimport Tbody from '../Tbody/Tbody'\r\nimport Thead from '../Thead/Thead'\r\nimport axios from 'axios'\r\nimport { getProducts, deleteProduct, isProductSavedAction } from '../../../../redux/actions/productsActions'\r\nimport { signInClickedAction } from '../../../../redux/actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport Alert from '../../Alert/Alert'\r\nimport Loading from '../../Loading/Loading'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            deleteProductClicked: false,\r\n            productToDelete: ''\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.isProductSaved) {\r\n            this.props.getAllProducts()\r\n            this.props.isProductSavedAction(false)\r\n        }\r\n    }\r\n\r\n    deleteProductClicked = (id) => {\r\n        this.setState({ deleteProductClicked: true, productToDelete: id })\r\n    }\r\n\r\n    deleteProduct = () => {\r\n        if (this.state.productToDelete) {\r\n            var prodID = this.state.productToDelete\r\n            axios.delete(`${URL}app/v1/products/${prodID}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    this.props.deleteProduct(prodID)\r\n                    this.setState({ deleteProductClicked: false, productToDelete: '' })\r\n                })\r\n                .catch(err => { console.log(err) })\r\n        }\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState({ deleteProductClicked: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table-div\">\r\n                {this.state.deleteProductClicked ? <Alert accept={this.deleteProduct} decline={this.closeAlert}\r\n                    text=\"You are about to delete a product. Are you sure?\" show={true} /> : null}\r\n                {this.props.productsLoaded ? \r\n                    this.props.products.length !== 0 ? <>\r\n                    <Thead properties={this.props.properties} />\r\n                    <div className=\"products-div\">\r\n                        <table className=\"budg-table\">\r\n                            <Tbody products={this.props.products}\r\n                                productToEdit={this.props.productToEdit}\r\n                                productToDelete={this.deleteProductClicked}\r\n                                handleCheckboxChange={this.props.handleCheckboxChange}\r\n                                editClicked={this.props.editClicked}\r\n                            />\r\n                        </table>\r\n                    </div>\r\n                </> :\r\n                <h1 className=\"table-h1\">No products found. Please create a product!</h1>\r\n                : <Loading/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isProductSaved: state.productsReducer.isProductSaved\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getProducts: (products) => dispatch(getProducts(products)),\r\n        deleteProduct: (id) => dispatch(deleteProduct(id)),\r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool)),\r\n        isProductSavedAction: (bool) => dispatch(isProductSavedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table)","import React from 'react'\r\nimport './TableInfo.css'\r\n\r\nfunction TableInfo(props) {\r\n    return (\r\n        <main className=\"ng-info-main\">\r\n          <p>Number of products: <span>{props.productsLength}</span></p>   \r\n          <p>Total price: <span>{props.totalPrice}</span></p>   \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TableInfo ","import React from 'react'\r\nimport './Table.css'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Table(props) {\r\n    if (props.products) {\r\n        var products = props.products;\r\n        var prods = props.products.map((prod, i) => {\r\n            return (\r\n                <tr key={prod.name + i}\r\n                    className=\"ng-new-prod-tr\">\r\n                    <td className='ng-new-prod-td'>{prod.name}</td>\r\n                    <td className='ng-new-prod-td'>{prod.quantity !== 0 ? (prod.price * prod.quantity) : prod.price}\r\n                        {prod.quantity !== 0 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                    <td className='ng-new-prod-td'>{prod.quantity}</td>\r\n                    {!props.addNewGroupClicked ? null :\r\n                        <td className=\"x-td\" onClick={() => props.removeProductFromGroup(prod.id)}>X</td>}\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <TableInfo productsLength={products ? products.length : null}\r\n                totalPrice={props.totalPrice}\r\n            />\r\n            <table className=\"ng-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        {!props.addNewGroupClicked ? null :\r\n                            <th></th>}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"ng-table-body\">\r\n                    {prods}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.groupsReducer.mode,\r\n        addNewGroupClicked: state.groupsReducer.addNewGroupClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)","import React from 'react'\r\nimport './Selected.css'\r\nimport Table from '../../NewGroupForm/Table-NG/Table'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction Selected(props) {\r\n    var productsLength = 0;\r\n    if (props.products) {\r\n        productsLength = props.products.length\r\n    }\r\n    return (\r\n        <div className=\"sg-main\">\r\n            <div className=\"sg-div\">\r\n                {productsLength !== 0 ? <>\r\n                    <h1>Products</h1>\r\n                    <Table products={props.products}\r\n                        totalPrice={props.totalPrice}\r\n                    /> </> : <h2>Select a group</h2>}\r\n                <div className=\"sg-btn-div\">\r\n                    <Button click={props.closeSelectedGroup}\r\n                        content='Close'\r\n                        name='ng-btn' />\r\n                    <Button click={() => props.editGroup(props.selectedGroup)}\r\n                        content='Edit'\r\n                        name='ng-btn' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selected;","import React from 'react'\r\nimport './GroupsTable.css'\r\nimport Button from '../../Button/Button'\r\nimport Loading from '../../Loading/Loading'\r\nimport { connect } from 'react-redux'\r\nimport { getGroupsAction, isGroupSavedAction } from '../../../../redux/actions/groupsActions'\r\nclass GroupsTable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            groupsLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isGroupSaved) {\r\n            this.props.getAllGroups()\r\n            this.props.isGroupSavedAction(false)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var groupsLength = 0;\r\n        var groups = []\r\n        if (this.props.groups) {\r\n            groupsLength = this.props.groups.length\r\n            groups = this.props.groups.map((group, i) => {\r\n                return (\r\n                    <tr key={group + i} className=\"group-tr\">\r\n                        <td>{group.date.toString().slice(0, 10)}</td>\r\n                        <td>{group.totalPrice}</td>\r\n                        <td id=\"edit-td\">\r\n                            <Button click={() => this.props.selectedGroupHandler(group)}\r\n                                content='Open'\r\n                                name='budg-edit-btn budg-dlt-btn' />\r\n                        </td>\r\n                        <td id=\"edit-td\">\r\n                            <Button click={() => this.props.editGroupHandler(group)}\r\n                                content='Edit'\r\n                                name='budg-edit-btn budg-dlt-btn' />\r\n                        </td>\r\n                        <td id=\"edit-td\">\r\n                            <Button click={() => this.props.deleteGroupHandler(group)}\r\n                                content='Delete'\r\n                                name='budg-edit-btn budg-dlt-btn' />\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                {this.props.groupsLoaded ?\r\n                    groupsLength !== 0 ?\r\n                        <table className=\"groups-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Total Price</th>\r\n                                    <th>Products</th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {groups}\r\n                            </tbody>\r\n                        </table> : <h1 className=\"table-h1\">No groups found. Please create a groups of products!</h1>\r\n                    : <Loading />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: state.groupsReducer.groups,\r\n        isGroupSaved: state.groupsReducer.isGroupSaved\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getGroupsAction: (groups) => dispatch(getGroupsAction(groups)),\r\n        isGroupSavedAction: (bool) => dispatch(isGroupSavedAction(bool))\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsTable);","import React from 'react'\r\nimport './Groups.css'\r\nimport { connect } from 'react-redux'\r\nimport Selected from './Selected/Selected'\r\nimport Button from '../Button/Button'\r\nimport GroupsTable from './GroupsTable/GroupsTable'\r\nimport { addNewGroupClicked, deleteGroup, groupToEditAction, editGroupClickedAction } from '../../../redux/actions/groupsActions'\r\nimport Alert from '../Alert/Alert'\r\nimport axios from 'axios'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\nclass Groups extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedGroup: [],\r\n            selectedProducts: [],\r\n            groupSelected: false,\r\n            deleteClicked: false,\r\n            groupToDelete: null,\r\n            addNewGroupClicked: false\r\n        }\r\n    }\r\n\r\n    selectedGroupHandler = (group) => {\r\n        this.setState({ selectedGroup: group, selectedProducts: group.products, groupSelected: true })\r\n    }\r\n\r\n    addNewGroupHandler = () => {\r\n        this.props.addNewGroupClicked(!this.state.addNewGroupClicked)\r\n    }\r\n\r\n    deleteGroupHandler = (group) => {\r\n        this.setState({ groupToDelete: group, deleteClicked: true })\r\n    }\r\n\r\n    acceptDelete = () => {\r\n        axios.delete(`${URL}app/v1/groups/${this.state.groupToDelete._id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.props.deleteGroup(this.state.groupToDelete)\r\n                this.setState({ deleteClicked: false, selected: [] })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    closeAlert = () => {\r\n        this.setState({ deleteClicked: false })\r\n    }\r\n\r\n    closeSelectedGroupHandler = () => {\r\n        this.setState({ groupSelected: false })\r\n    }\r\n\r\n    editGroupHandler = (group) => {\r\n        this.props.groupToEditAction(group)\r\n        this.props.editGroupClickedAction(true)\r\n        this.props.addNewGroupClicked(true)\r\n        this.setState({ groupSelected: false})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.selectedProducts) {\r\n            var prods = this.state.selectedProducts\r\n            var  productsTotalPrice = 0\r\n            for (let i = 0; i < prods.length; i++) {\r\n                if (prods[i].quantity > 1) {\r\n                    productsTotalPrice += (prods[i].quantity * Number(prods[i].price))\r\n                } else if (prods[i].quantity < 2) {\r\n                    productsTotalPrice += Number(prods[i].price)\r\n                }\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <main className=\"groups-main\">\r\n                {this.state.deleteClicked ? <Alert accept={this.acceptDelete} decline={this.closeAlert}\r\n                    text=\"You are about to delete a group of products. Are you sure?\" show={true}\r\n                /> : null}\r\n                {this.state.groupSelected ?\r\n                    <Selected products={this.state.selectedProducts}\r\n                        selectedGroup={this.state.selectedGroup}\r\n                        totalPrice={productsTotalPrice}\r\n                        addNewGroupHandler={this.addNewGroupHandler}\r\n                        closeSelectedGroup={this.closeSelectedGroupHandler}\r\n                        editGroup={this.editGroupHandler}\r\n                    /> : null}\r\n                <Button click={this.addNewGroupHandler}\r\n                    content='Add a new group of products'\r\n                    name='table-tools-btn add-group-btn' />\r\n                <div className=\"groups-content\">\r\n                    <div className=\"groups-div\">\r\n                        <GroupsTable groups={this.props.groups}\r\n                            selectedGroupHandler={this.selectedGroupHandler}\r\n                            deleteGroupHandler={this.deleteGroupHandler}\r\n                            editGroupHandler={this.editGroupHandler}\r\n                            totalPrice={productsTotalPrice}\r\n                            groupsLoaded={this.props.groupsLoaded}\r\n                            getAllGroups={this.props.getAllGroups}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: state.groupsReducer.groups\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addNewGroupClicked: (bool) => dispatch(addNewGroupClicked(bool)),\r\n        deleteGroup: (group) => dispatch(deleteGroup(group)),\r\n        groupToEditAction: (group) => dispatch(groupToEditAction(group)),\r\n        editGroupClickedAction: (bool) => dispatch(editGroupClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Groups)","import React from 'react'\r\nimport './Select.css'\r\n\r\nfunction Select(props) {\r\n    return (\r\n        <div className=\"select-div\">\r\n            <select name=\"select\" className=\"select\" onChange={props.selectOption} value={props.selectedMonth}>\r\n            {props.label === 'month' ? \r\n                        <option className=\"option\" value='default' defaultChecked >All items</option>: null}\r\n                {props.options.map((option, i) => {\r\n                    return <option className=\"option\" key={`option${i}`}\r\n                        value={i}>{option}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport './HeaderInfo.css'\r\n\r\nimport Select from '../Select/Select'\r\nimport Button from '../Button/Button'\r\n\r\nfunction HeaderInfo(props) {\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n    const year = (new Date()).getFullYear();\r\n    const years = Array.from(new Array(1), (val, index) => index + year).reverse();\r\n    var surplus = localStorage.getItem('income') - props.totalPrice - props.groupsTotalPrice;\r\n    return (\r\n        <main className=\"head-info-main\">\r\n            <div className=\"total-info-div\">\r\n                <p className=\"head-info-p budget-p\">Monthly Budget <span>{localStorage.getItem('income')}</span></p>\r\n                {props.isMonthSelected ?\r\n                    <p className='head-info-p remaining-p'>Remaining <span>{surplus}</span></p>\r\n                    : null}\r\n            </div>\r\n            <div className=\"products-info-div\">\r\n                <p className=\"head-info-p\">Price <span>{props.totalPrice}</span></p>\r\n                <p className=\"head-info-p\">Products\r\n                <span>{props.productsLength}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"groups-info-div\">\r\n                <p className=\"head-info-p groups-p\">Groups\r\n                  <span>{props.groupsLength}</span>\r\n                </p>\r\n                <p className=\"head-info-p\">Products\r\n                <span>{props.groupsProductsNumber}</span>\r\n                </p>\r\n                <p className=\"head-info-p\">Price\r\n                <span>{props.groupsTotalPrice}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"table-info-selects\">\r\n                <p className=\"label-p\">Filter: </p>\r\n                <Select options={months} selectOption={props.selectFilter}\r\n                    selectedMonth={props.selectedMonth} label='month' value={props.selectedMonth} />\r\n                <Select options={years} selectOption={props.selectFilter}\r\n                    selectedMonth={props.selectedMonth} label='year' />\r\n            </div>\r\n            <Button click={props.getAll}\r\n                content='See all'\r\n                name='table-info-btn' />\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default HeaderInfo","import React from 'react'\r\nimport './Inputs.css'\r\nimport Button from '../../Button/Button'\r\nimport TextInput from '../../Inputs/TextInput/TextInput'\r\nimport DateInput from '../../Inputs/DateInput/DateInput'\r\nimport NumberInput from '../../Inputs/NumberInput/NumberInput'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n            <form className=\"ng-form\" onSubmit={props.addProductToGroup}>\r\n            <div className=\"ng-date-div\">\r\n                <DateInput saveValue={props.handleGroupDateInputValue}\r\n                    id=\"date\" label='date' value={props.dateValue} />\r\n            </div>\r\n                <TextInput saveValue={props.handleProductInputValue} id=\"name\"\r\n                    label='name' placeholder=\"Product name\"\r\n                    value={props.product.name} />\r\n                <NumberInput saveValue={props.handleProductInputValue}\r\n                    id=\"price\" label='price' placeholder=\"price\"\r\n                    value={props.product.price} />\r\n                <NumberInput saveValue={props.handleProductInputValue}\r\n                    id=\"quantity\" label='quantity' placeholder=\"quantity\"\r\n                    value={props.product.quantity} />\r\n                <Button click={props.addProductToGroup}\r\n                    content='Add product to group'\r\n                    name=\"ng-btn\"\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default Inputs","import React from 'react'\r\nimport './NewGroup.css'\r\nimport Inputs from '../Inputs-NG/Inputs'\r\nimport Table from '../Table-NG/Table'\r\nimport Button from '../../Button/Button'\r\nimport { addNewGroupClicked, saveGroup, isGroupSavedAction, editGroupAction, groupToEditAction, editGroupClickedAction } from '../../../../redux/actions/groupsActions'\r\nimport Alert from '../../Alert/Alert'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            date: '',\r\n            newGroupProducts: [],\r\n            product: {\r\n                name: '',\r\n                price: 0,\r\n                quantity: 1\r\n            },\r\n            error: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isGroupEditClicked) {\r\n            var group = this.props.groupToEdit\r\n            this.setState({\r\n                date: group.date,\r\n                newGroupProducts: group.products\r\n            })\r\n        }\r\n    }\r\n\r\n    handleProductInputValue = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            product: { ...this.state.product, [event.target.id]: event.target.value }\r\n        })\r\n    }\r\n\r\n    handleGroupDateInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    addProductToGroup = (e) => {\r\n        e.preventDefault()\r\n        var product = this.state.product\r\n        if (this.state.product.name !== '' && product.price !== 0 && product.quantity > 0) {\r\n            var prods = this.state.newGroupProducts\r\n            product.id = Math.floor(Math.random() * 1000)\r\n            prods.push(product)\r\n            this.setState({\r\n                newGroupProducts: prods,\r\n                product: { name: '', price: 0, quantity: 1 }\r\n            })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    removeProductFromGroup = (id) => {\r\n        var products = this.state.newGroupProducts\r\n        var dlt = products.filter((prod, i) => prod.id === id)\r\n        products.splice(products.indexOf(dlt[0]), 1)\r\n        this.setState({ newGroupProducts: products })\r\n    }\r\n\r\n    getTotalPrice = (products) => {\r\n        if (products) {\r\n            let totalPrice = 0;\r\n            for (var i = 0; i < products.length; i++) {\r\n                if (products[i].quantity > 1) {\r\n                    totalPrice += (products[i].quantity * Number(products[i].price))\r\n                } else {\r\n                    totalPrice += Number(products[i].price)\r\n                }\r\n            }\r\n            return totalPrice;\r\n        }\r\n    }\r\n\r\n    saveGroupOfProducts = () => {\r\n        if (this.state.date !== '' && this.state.newGroupProducts.length !== 0) {\r\n            var products = this.state.newGroupProducts\r\n            var totalPrice = this.getTotalPrice(products);\r\n            axios.post(URL + `app/v1/groups/`, {\r\n                date: this.state.date,\r\n                totalPrice: totalPrice,\r\n                userID: localStorage.getItem('user-id'),\r\n                products: this.state.newGroupProducts\r\n            },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    this.props.saveGroup(res.data)\r\n                    this.props.isGroupSavedAction(true)\r\n                    this.setState({ newGroupProducts: [], date: '' })\r\n                    this.props.addNewGroupClicked(false)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    editGroupHandler = (event) => {\r\n        event.preventDefault()\r\n        var groupID = this.props.groupToEdit._id\r\n        var products = this.state.newGroupProducts\r\n        var totalPrice = this.getTotalPrice(products)\r\n        var group = {\r\n            _id: groupID,\r\n            date: this.state.date,\r\n            totalPrice: totalPrice,\r\n            userID: localStorage.getItem('user-id'),\r\n            products: this.state.newGroupProducts\r\n        }\r\n        if (this.state.date !== '' && this.state.newGroupProducts.length !== 0) {\r\n            axios.put(URL + `app/v1/groups/${groupID}`,\r\n                {\r\n                    date: this.state.date,\r\n                    totalPrice: totalPrice,\r\n                    userID: localStorage.getItem('user-id'),\r\n                    products: this.state.newGroupProducts\r\n                }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n                .then((res) => {\r\n                    this.setState({\r\n                        error: false,\r\n                        date: '',\r\n                        newGroupProducts: [],\r\n                        product: { name: '', price: 0, quantity: 1 }\r\n                    })\r\n                    this.props.editGroupAction(group)\r\n                    this.props.groupToEditAction({})\r\n                    this.props.editGroupClickedAction(false)\r\n                    this.props.addNewGroupClicked(false)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    this.setState({ error: true })\r\n                })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeNewGroup = () => {\r\n        this.setState({\r\n            date: '',\r\n            newGroupProducts: [],\r\n            product: { name: '', price: 0, quantity: 1 }\r\n        })\r\n        this.props.groupToEditAction({})\r\n        this.props.editGroupClickedAction(false)\r\n        this.props.addNewGroupClicked(false)\r\n    }\r\n\r\n    render() {\r\n        var products = this.state.newGroupProducts\r\n        var totalPrice = this.getTotalPrice(products)\r\n        return (\r\n            <main className=\"ng-main\">\r\n                {this.state.error ? <Alert\r\n                    accept={this.closeErrorAlert}\r\n                    text=\"Please fill up every field and add products!\"\r\n                    show={false} /> : null}\r\n                <div className=\"ng-div\">\r\n                    <div className='ng-left-side'>\r\n                        <h3>New group of products</h3>\r\n                        <Inputs addProductToGroup={this.addProductToGroup}\r\n                            handleGroupDateInputValue={this.handleGroupDateInputValue}\r\n                            handleProductInputValue={this.handleProductInputValue}\r\n                            product={this.state.product}\r\n                            dateValue={this.state.date}\r\n                        />\r\n                        <div className=\"ng-btns-div\">\r\n                            <Button click={this.closeNewGroup}\r\n                                content='Close'\r\n                                name='ng-btn ng-close-btn' />\r\n                            {this.props.isGroupEditClicked ?\r\n                                <Button click={this.editGroupHandler}\r\n                                    content='Edit group'\r\n                                    name='ng-btn' /> :\r\n                                <Button click={this.saveGroupOfProducts}\r\n                                    content='Save group'\r\n                                    name='ng-btn' />}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ng-right-side\">\r\n                        <Table products={this.state.newGroupProducts}\r\n                            totalPrice={totalPrice}\r\n                            removeProductFromGroup={this.removeProductFromGroup}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groupToEdit: state.groupsReducer.groupToEdit,\r\n        isGroupEditClicked: state.groupsReducer.isGroupEditClicked\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addNewGroupClicked: (bool) => dispatch(addNewGroupClicked(bool)),\r\n        isGroupSavedAction: (bool) => dispatch(isGroupSavedAction(bool)),\r\n        saveGroup: (data) => dispatch(saveGroup(data)),\r\n        editGroupAction: (data) => dispatch(editGroupAction(data)),\r\n        groupToEditAction: (data) => dispatch(groupToEditAction(data)),\r\n        editGroupClickedAction: (bool) => dispatch(editGroupClickedAction(bool))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewGroup); ","import React from 'react'\r\nimport './EmailInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\n\r\nfunction EmailInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='email'\r\n                id={props.id}\r\n                value={props.value}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailInput\r\n","import React from 'react'\r\nimport './PasswordInput.css'\r\nimport '../inputs.css'\r\nimport Label from '../../Label/Label'\r\n\r\nfunction PasswordInput(props) {\r\n    return (\r\n        <div>\r\n            <Label id={props.id} label={props.label} />\r\n            <input\r\n                onChange={props.saveValue}\r\n                className=\"inputs\"\r\n                type='password'\r\n                id={props.id}\r\n                value={props.value}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordInput\r\n","import React, { Component } from 'react'\r\nimport './Account.css'\r\nimport TextInput from '../Inputs/TextInput/TextInput'\r\nimport EmailInput from '../Inputs/EmailInput/EmailInput'\r\nimport PasswordInput from '../Inputs/PasswordInput/PasswordInput'\r\nimport NumberInput from '../Inputs/NumberInput/NumberInput'\r\nimport Button from '../Button/Button'\r\nimport { accountClickedAction, signInClickedAction } from '../../../redux/actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport Alert from '../Alert/Alert'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\n\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            income: 0,\r\n            email: '',\r\n            password: '',\r\n            error: false,\r\n            userExists: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var isUserLogged = localStorage.getItem('userLogged') === 'true'\r\n        if (isUserLogged) {\r\n            this.getUserToEdit()\r\n        }\r\n    }\r\n\r\n    getUserToEdit = () => {\r\n        var id = localStorage.getItem('user-id')\r\n        axios.get(`${URL}app/v1/auth/getuser/${id}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    name: res.data[0].name,\r\n                    income: res.data[0].income,\r\n                    email: res.data[0].email,\r\n                    password: res.data[0].password\r\n                })\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    saveInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    closeAccountHandler = () => {\r\n        this.props.accountClickedAction(false)\r\n    }\r\n\r\n    registerUserHandler = (e) => {\r\n        e.preventDefault()\r\n        if (this.state.name !== '' && this.state.income !== 0 && this.state.email !== '' && this.state.password !== '') {\r\n            axios.post(URL + 'app/v1/auth/register', {\r\n                name: this.state.name,\r\n                income: this.state.income,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n                .then(res => {\r\n                    axios.post(URL + 'app/v1/auth/login', {\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                    })\r\n                        .then(res => {\r\n                            this.setState({ error: false })\r\n                            console.log(res)\r\n                            localStorage.setItem('jwt', res.data.jwt)\r\n                            localStorage.setItem('name', res.data.name)\r\n                            localStorage.setItem('user-id', res.data.id)\r\n                            localStorage.setItem('userLogged', 'true')\r\n                            localStorage.setItem('mode', 'products')\r\n                            localStorage.setItem('income', res.data.income)\r\n                            this.props.signInClickedAction(false)\r\n                            window.location.reload()\r\n                        })\r\n                        .catch(err => {\r\n                            this.setState({ error: true })\r\n                        })\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    if (error.response.status === 500) {\r\n                        this.setState({ userExists: true })\r\n                    }\r\n                })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    editUserHandler = () => {\r\n        var userID = localStorage.getItem('user-id')\r\n        axios.put(URL + `app/v1/auth/updateuser/${userID}`, {\r\n            name: this.state.name,\r\n            income: this.state.income,\r\n            email: this.state.email\r\n        }, {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                console.log(res)\r\n                localStorage.setItem('income', this.state.income)\r\n                this.props.accountClickedAction(false)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    choseSignInHandler = () => {\r\n        this.props.signInClickedAction(true)\r\n        this.props.accountClickedAction(false)\r\n    }\r\n\r\n    render() {\r\n        var isUserLogged = localStorage.getItem('userLogged')\r\n        return (\r\n            <main className=\"account-main\">\r\n                {this.state.error ? <Alert accept={this.closeErrorAlert} text=\"Please fill up every field!\" show={false} /> : null}\r\n                <div className=\"account-div\">\r\n                    <h1>{isUserLogged ? \"Account\" : 'Register'}</h1>\r\n                    <TextInput saveValue={this.saveInputValue} id=\"name\"\r\n                        label='full name' placeholder=\"full name\"\r\n                        value={this.state.name} />\r\n                    <NumberInput saveValue={this.saveInputValue}\r\n                        id=\"income\" label='monthly income' placeholder=\"monthly income\"\r\n                        value={this.state.income} />\r\n                    <EmailInput saveValue={this.saveInputValue}\r\n                        id=\"email\" label='email' placeholder=\"email\"\r\n                        value={this.state.email} />\r\n                    {!isUserLogged ?\r\n                        <PasswordInput saveValue={this.saveInputValue}\r\n                            id=\"password\" label='password' placeholder=\"password\"\r\n                            value={this.state.password} /> :\r\n                       null}\r\n                    {this.state.userExists ? <p>User already exists!</p> : null}\r\n                    <div className=\"btns-div\">\r\n                        <Button click={this.closeAccountHandler}\r\n                            content='Close'\r\n                            name='ng-btn' />\r\n                        <Button click={isUserLogged ? this.editUserHandler : this.registerUserHandler}\r\n                            content={isUserLogged ? \"Edit\" : 'Register'}\r\n                            name='ng-btn' />\r\n                    </div>\r\n                    {isUserLogged ? null :\r\n                        <p className=\"no-acc-p\">To sign in, click\r\n                        <span onClick={this.choseSignInHandler} className=\"here-span\">here</span>\r\n                        </p>}\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userToEdit: state.userReducer.userToEdit\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        accountClickedAction: (bool) => dispatch(accountClickedAction(bool)),\r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Account)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { signInClickedAction, accountClickedAction } from '../../../redux/actions/userActions'\r\nimport './SignIn.css'\r\nimport Button from '../Button/Button'\r\nimport EmailInput from '../Inputs/EmailInput/EmailInput'\r\nimport PasswordInput from '../Inputs/PasswordInput/PasswordInput'\r\nimport Alert from '../Alert/Alert'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: false,\r\n            userNotFound: false\r\n        }\r\n    }\r\n\r\n    saveInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    closeSignInHandler = () => {\r\n        this.props.signInClickedAction(false)\r\n    }\r\n\r\n    signInHandler = () => {\r\n        if (this.state.email === '' || this.state.password === '') {\r\n            this.setState({ error: true })\r\n        } else {\r\n            axios.post(URL + 'app/v1/auth/login', {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    this.setState({ error: false, userNotFound: false })\r\n                    localStorage.setItem('jwt', res.data.jwt)\r\n                    localStorage.setItem('name', res.data.name)\r\n                    localStorage.setItem('user-id', res.data.id)\r\n                    localStorage.setItem('income', res.data.income)\r\n                    localStorage.setItem('userLogged', 'true')\r\n                    localStorage.setItem('mode', 'products')\r\n                    this.props.signInClickedAction(false)\r\n                    window.location.reload()\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    this.setState({ error: true })\r\n                    if(error.response.status === 500) {\r\n                        this.setState({userNotFound: true})\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    choseRegisterHandler = () => {\r\n        this.props.signInClickedAction(false)\r\n        this.props.accountClickedAction(true)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-main\">\r\n                {this.state.error ? <Alert accept={this.closeErrorAlert}\r\n                    text=\"User not found! Please fill up every field or check your credentials!\"\r\n                    show={false} />\r\n                    : null}\r\n                <div className=\"sign-in-div\">\r\n                    <h1>sign in</h1>\r\n                    <EmailInput saveValue={this.saveInputValue} id=\"email\" label='email' placeholder=\"email\" />\r\n                    <PasswordInput saveValue={this.saveInputValue} id=\"password\" label='password' placeholder=\"password\" />\r\n                    <div className=\"btns-div\">\r\n                        <Button click={this.closeSignInHandler}\r\n                            content='Close'\r\n                            name='ng-btn' />\r\n                        <Button click={this.signInHandler}\r\n                            content='Sign In'\r\n                            name='ng-btn' />\r\n                    </div>\r\n                    <p className=\"no-acc-p\">To register, click \r\n                        <span onClick={this.choseRegisterHandler} className=\"here-span\">here</span>\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool)),\r\n        accountClickedAction: (bool) => dispatch(accountClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import React from 'react'\r\nimport './BudgetCalc.css'\r\nimport ProductInputs from '../../components/BudgetCalc/ProductInputs/ProductInputs'\r\nimport TableTools from '../../components/BudgetCalc/TableTools/TableTools'\r\nimport Table from '../../components/BudgetCalc/BudgetTable/Table/Table'\r\nimport Groups from '../../components/BudgetCalc/Groups/Groups'\r\nimport { connect } from 'react-redux'\r\nimport { signOutClickedAction } from '../../redux/actions/userActions'\r\nimport { getProducts, sortProducts, productToEdit, saveProduct, editProduct, isProductSavedAction } from '../../redux/actions/productsActions'\r\nimport { sortGroups, getGroupsAction } from '../../redux/actions/groupsActions'\r\nimport Alert from '../../components/BudgetCalc/Alert/Alert'\r\nimport HeaderInfo from '../../components/BudgetCalc/HeaderInfo/HeaderInfo'\r\nimport NewGroup from '../../components/BudgetCalc/NewGroupForm/NewGroup/NewGroup'\r\nimport Account from '../../components/BudgetCalc/Account/Account'\r\nimport SignIn from '../../components/BudgetCalc/SignIn/SignIn'\r\nimport axios from 'axios'\r\nconst URL = 'https://budgetarchitect.herokuapp.com/'\r\nclass BudgetCalc extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            product: {\r\n                name: '',\r\n                type: '',\r\n                price: 0,\r\n                quantity: 1,\r\n                date: ''\r\n            },\r\n            editClicked: false,\r\n            selectedValue: 'name',\r\n            error: false,\r\n            prodToEditID: '',\r\n            productsLoaded: false,\r\n            groupsLoaded: false,\r\n            selectedMonth: 'default',\r\n            selectedYear: '2020',\r\n            isMonthSelected: false,\r\n            mode: 'products'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProductsHandler()\r\n        this.getAllGroupsHandler()\r\n    }\r\n\r\n    handleInputValue = (event) => {\r\n        this.setState({ ...this.state, product: { ...this.state.product, [event.target.id]: event.target.value } })\r\n    }\r\n\r\n    saveProductHandler = (e) => {\r\n        var product = this.state.product\r\n        var id = localStorage.getItem('user-id')\r\n        e.preventDefault()\r\n        if (product.name !== '' && product.type !== '' && product.price !== 0 && product.quantity >= 1 && product.date !== '') {\r\n            axios.post(URL + 'app/v1/products/', {\r\n                name: product.name,\r\n                type: product.type,\r\n                price: product.price,\r\n                quantity: product.quantity,\r\n                date: product.date,\r\n                userID: id\r\n            }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n                .then(res => {\r\n                    this.props.saveProduct(res.data)\r\n                    this.props.isProductSavedAction(true)\r\n                    this.setState({\r\n                        product: { name: '', type: '', price: 0, quantity: 1, date: '' },\r\n                        editClicked: false\r\n                    })\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    productToEditHandler = (prod) => {\r\n        this.props.productToEdit(prod)\r\n        this.setState({\r\n            editClicked: true,\r\n            product: prod,\r\n            prodToEditID: prod._id\r\n        })\r\n    }\r\n\r\n    editProductHandler = (event) => {\r\n        var prodID = this.state.prodToEditID\r\n        var product = this.state.product\r\n        var userID = localStorage.getItem('user-id')\r\n        event.preventDefault()\r\n        if (product.name !== '' && product.type !== '' && product.price !== 0 && product.quantity >= 1 && product.date !== '') {\r\n            axios.put(URL + `app/v1/products/${prodID}`,\r\n                {\r\n                    name: product.name,\r\n                    type: product.type,\r\n                    price: product.price,\r\n                    quantity: product.quantity,\r\n                    date: product.date,\r\n                    userID: userID\r\n                }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n                .then(res => {\r\n                    this.setState({\r\n                        editClicked: false,\r\n                        error: false,\r\n                        product: { name: '', type: '', price: 0, quantity: 1, date: '' }\r\n                    })\r\n                    this.props.editProduct(product)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    selectSortHandler = (e) => {\r\n        if (this.state.mode === 'products') {\r\n            this.props.sortProducts(e.target.value)\r\n        } else {\r\n            this.props.sortGroups(e.target.value)\r\n        }\r\n    }\r\n\r\n    signOutHandler = () => {\r\n        localStorage.clear()\r\n        window.location.reload();\r\n    }\r\n    declineSignOutHandler = () => {\r\n        this.props.signOutClickedAction(false)\r\n    }\r\n\r\n    getAllProductsHandler = () => {\r\n        this.setState({ isMonthSelected: false })\r\n        axios.get(URL + \"app/v1/products/get/\",\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n                }\r\n            })\r\n            .then(res => {\r\n                this.setState({ selectedMonth: 'default', productsLoaded: true })\r\n                this.props.getProducts(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.setState({ productsLoaded: false })\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    getAllGroupsHandler = () => {\r\n        axios.get(URL + 'app/v1/groups/get/', {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.setState({ groupsLoaded: true })\r\n                this.props.getGroupsAction(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.setState({ groupsLoaded: false })\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    selectFilterHandler = (event) => {\r\n        this.setState({ isMonthSelected: true })\r\n        var year = this.state.selectedYear;\r\n        var month\r\n        if (event.target.value.length === 4) {\r\n            year = event.target.value\r\n            this.setState({ selectedYear: event.target.value })\r\n        } else if (event.target.value.length < 4) {\r\n            month = event.target.value\r\n            this.setState({ selectedMonth: event.target.value })\r\n        }\r\n        if (event.target.value === 'default') {\r\n                this.getAllProductsHandler()\r\n                this.getAllGroupsHandler()\r\n        } else if (event.target.value !== 'default') {\r\n            this.getFilteredProductsHandler(month, year)\r\n        }\r\n    }\r\n\r\n    getFilteredProductsHandler = (mon, yr) => {\r\n        const options = {\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('jwt')}`\r\n            }\r\n        }\r\n        var year = yr;\r\n        var month = mon;\r\n        month = parseInt(month) + 1\r\n        if (month < 10) {\r\n            month = \"0\" + month.toString();\r\n        }\r\n        let dateFrom = new Date(`${Number(year)}-${month}-01 00:00:00.000`).getTime()\r\n        let dateTo = new Date(`${Number(year)}-${month}-31 23:59:59.000`).getTime()\r\n        let one = `${URL}app/v1/products/get/?date_from=${dateFrom}&date_to=${dateTo}`\r\n        let two = `${URL}app/v1/groups/get/?date_from=${dateFrom}&date_to=${dateTo}`\r\n        const requestOne = axios.get(one, options);\r\n        const requestTwo = axios.get(two, options)\r\n        axios.all([requestOne, requestTwo])\r\n            .then(axios.spread((...responses) => {\r\n                const responseOne = responses[0]\r\n                const responseTwo = responses[1]\r\n                this.props.getProducts(responseOne.data)\r\n                this.props.getGroupsAction(responseTwo.data)\r\n            }))\r\n            .catch(error => {\r\n                console.log(error)\r\n                if (error.response.status === 401) {\r\n                    this.props.signInClickedAction(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    titleClickedHandler = () => {\r\n        if (this.state.mode === 'products') {\r\n            this.setState({ mode: 'groups' })\r\n        } else {\r\n            this.setState({ mode: 'products' })\r\n        }\r\n    }\r\n\r\n    addNewGroupHandler = () => {\r\n        this.setState({ mode: 'groups' })\r\n        this.props.addNewGroupClicked(true)\r\n    }\r\n\r\n    seeAllHandler = () => {\r\n        this.getAllProductsHandler()\r\n         this.getAllGroupsHandler()\r\n    }\r\n\r\n\r\n    render() {\r\n        var isUserLogged = localStorage.getItem('userLogged') === 'true'\r\n        var productsLength = 0;\r\n        var totalPrice = 0;\r\n        var products;\r\n        if (this.props.products) {\r\n            products = this.props.products\r\n            productsLength = products.length\r\n            for (let i = 0; i < products.length; i++) {\r\n                if (products[i].quantity >= 1) {\r\n                    totalPrice += (products[i].quantity * Number(products[i].price))\r\n                } else if (products[i].quantity < 1) {\r\n                    totalPrice += Number(products[i].price)\r\n                }\r\n            }\r\n        }\r\n\r\n        var groups;\r\n        var groupsTotalPrice = 0;\r\n        var groupProductsLength = 0;\r\n        if (this.props.groups) {\r\n            groups = this.props.groups\r\n            for (let i = 0; i < groups.length; i++) {\r\n                groupsTotalPrice += Number(groups[i].totalPrice)\r\n                groupProductsLength += groups.length\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <main className=\"budget-calc-main\">\r\n                <HeaderInfo totalPrice={totalPrice}\r\n                    productsLength={productsLength}\r\n                    getAll={this.seeAllHandler}\r\n                    selectFilter={this.selectFilterHandler}\r\n                    selectedMonth={this.state.selectedMonth}\r\n                    selectedYear={this.state.selectedYear}\r\n                    groupsTotalPrice={groupsTotalPrice}\r\n                    groupsLength={this.props.groups.length}\r\n                    groupsProductsNumber={groupProductsLength}\r\n                    isMonthSelected={this.state.isMonthSelected}\r\n                    mode={this.state.mode}\r\n                />\r\n                {this.props.accountClicked ? <Account /> : null}\r\n                {this.props.signInClicked && !this.props.isUserLogged ? <SignIn /> : null}\r\n                {this.props.addNewGroupClicked ? <NewGroup /> : null}\r\n                {this.state.error ? <Alert accept={this.closeErrorAlert}\r\n                    text=\"Please fill up every field!\"\r\n                /> : null}\r\n                {this.props.signOutClicked ? <Alert accept={this.signOutHandler} decline={this.declineSignOutHandler}\r\n                    text=\"Your are about to sign out! Are you sure?\" show={true}\r\n                /> : null}\r\n                <div className=\"bc-titles-div\">\r\n                    <h1 onClick={this.titleClickedHandler}\r\n                        className={this.state.mode === 'products' ? \"content-title-active content-title\" : 'content-title'}>products </h1>\r\n                    <h1 onClick={this.titleClickedHandler}\r\n                        className={this.state.mode === 'groups' ? \"content-title-active content-title\" : 'content-title'}>groups</h1>\r\n                </div>\r\n                {isUserLogged ? <>\r\n                    {this.state.mode === \"products\" ?\r\n                        <ProductInputs\r\n                            handleInputValue={this.handleInputValue}\r\n                            product={this.state.product}\r\n                            editClicked={this.state.editClicked}\r\n                            editProduct={this.editProductHandler}\r\n                            saveProduct={this.saveProductHandler}\r\n                            types={this.state.types}\r\n                        /> : null}\r\n                    <div className=\"budget-calc-content-div\">\r\n                        {this.state.mode === \"products\" ?\r\n                            <Table\r\n                                getAllProducts={this.getAllProductsHandler}\r\n                                getFilteredProductsHandler={this.getFilteredProductsHandler}\r\n                                productsLoaded={this.state.productsLoaded}\r\n                                properties={this.state.properties}\r\n                                products={this.props.products}\r\n                                productToEdit={this.productToEditHandler}\r\n                                handleCheckboxChange={this.handleCheckboxChange}\r\n                                editClicked={this.state.editClicked}\r\n                            /> : <Groups groupsLoaded={this.state.groupsLoaded}\r\n                                getAllGroups={this.getAllGroupsHandler}\r\n                            />}\r\n                        <TableTools mode={this.state.mode}\r\n                            deleteProducts={this.deleteProducts}\r\n                            selectSort={this.selectSortHandler}\r\n                            addNewGroupClicked={this.addNewGroupHandler}\r\n                        />\r\n                    </div>\r\n                </> :\r\n                    <div>\r\n                        <h1 className=\"welcome-h1\">Please sign in or register!</h1>\r\n                    </div>}\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        products: state.productsReducer.products,\r\n        groups: state.groupsReducer.groups,\r\n        groupsProductsNumber: state.groupsReducer.groupsProductsNumber,\r\n        addNewGroupClicked: state.groupsReducer.addNewGroupClicked,\r\n        accountClicked: state.userReducer.accountClicked,\r\n        signInClicked: state.userReducer.signInClicked,\r\n        signOutClicked: state.userReducer.signOutClicked\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getProducts: (products) => dispatch(getProducts(products)),\r\n        getGroupsAction: (groups) => dispatch(getGroupsAction(groups)),\r\n        saveProduct: (prod) => dispatch(saveProduct(prod)),\r\n        productToEdit: (id) => dispatch(productToEdit(id)),\r\n        editProduct: (prod) => dispatch(editProduct(prod)),\r\n        sortProducts: (val) => dispatch(sortProducts(val)),\r\n        sortGroups: (val) => dispatch(sortGroups(val)),\r\n        signOutClickedAction: (bool) => dispatch(signOutClickedAction(bool)),\r\n        isProductSavedAction: (bool) => dispatch(isProductSavedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BudgetCalc)","import React from 'react'\r\nimport './Header.css'\r\nimport { accountClickedAction, signInClickedAction, signOutClickedAction } from '../../../redux/actions/userActions'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Header(props) {\r\n    const accountClickedHandler = () => {\r\n        props.accountClickedAction(true)\r\n    }\r\n    const signInClickedHandler = () => {\r\n        props.signInClickedAction(true)\r\n    }\r\n    const signOutHandler = () => {\r\n        props.signOutClickedAction(true)\r\n    }\r\n\r\n    var isUserLogged = localStorage.getItem('userLogged') === 'true'\r\n\r\n    return (\r\n        <nav className=\"header-main\">\r\n            <h1 className=\"header-title\">Budget Architect</h1>\r\n            <ul className=\"header-ul\">\r\n                <li onClick={accountClickedHandler}>{isUserLogged ? \"Account\" : \"Register\"}</li>\r\n                <li onClick={isUserLogged ? signOutHandler : signInClickedHandler}>{isUserLogged ? \"Sign Out\" : \"Sign In\"}</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        accountClickedAction: (bool) => dispatch(accountClickedAction(bool)),\r\n        signInClickedAction: (bool) => dispatch(signInClickedAction(bool)),\r\n        signOutClickedAction: (bool) => dispatch(signOutClickedAction(bool))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Header);","import React from 'react';\r\nimport './App.css';\r\nimport BudgetCalc from './BudgetCalc/BudgetCalc'\r\nimport Header from '../components/BudgetCalc/Header/Header'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Header/>\r\n        <BudgetCalc/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initState = {\r\n    signInClicked: false,\r\n    accountClicked: false,\r\n    signOutClicked: false,\r\n    userToEdit: {}\r\n}\r\n\r\nexport function userReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"SIGN_IN_CLICKED\": {\r\n            return {\r\n                ...state,  signInClicked: action.payload}\r\n        }\r\n        case \"SIGN_OUT_CLICKED\": {\r\n            return {\r\n                ...state,  signOutClicked: action.payload}\r\n        }\r\n        case \"ACCOUNT_CLICKED\": {\r\n            return {\r\n                ...state,  accountClicked: action.payload}\r\n        }\r\n        case \"EDIT_USER_INFO\": {\r\n            return {\r\n                ...state,  userToEdit: action.payload}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState = {\r\n    products: [],\r\n    addNewGroupClicked: false,\r\n    productToEdit: {},\r\n    isProductSaved: false\r\n}\r\n\r\nexport function productsReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"GET_PRODUCTS\": {\r\n            return { ...state, products: action.payload }\r\n        }\r\n        case \"SAVE_PRODUCT\": {\r\n            return { ...state, products: [...state.products, action.payload]}\r\n        }\r\n        case \"IS_PRODUCT_SAVED\": {\r\n            return { ...state, isProductSaved: action.payload }\r\n        }\r\n        case \"PRODUCT_TO_EDIT\": {\r\n            return {\r\n                ...state, productToEdit: action.payload\r\n            }\r\n        }\r\n        case \"EDIT_PRODUCT\": {\r\n            return {\r\n                ...state, products: state.products.map((prod) => {\r\n                    if(prod._id === action.payload._id) {\r\n                        return {\r\n                            ...prod,\r\n                            ...action.payload\r\n                        }\r\n                    } else {\r\n                        return prod\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        case \"DELETE_PRODUCT\": {\r\n            return {\r\n                ...state, products: state.products.filter(prod => prod._id !== action.payload)\r\n            }\r\n        }\r\n        case \"SORT_PRODUCTS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, products: [...state.products].sort((a, b) =>\r\n                    (a[val] > b[val]) ? 1 : ((b[val] > a[val]) ? -1 : 0))\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initState = {\r\n    addNewGroupClicked: false,\r\n    groups: [],\r\n    isGroupSaved: false,\r\n    groupToEdit: {},\r\n    isGroupEditClicked: false,\r\n    groupsProductsNumber: 0\r\n}\r\n\r\nexport function groupsReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"GET_GROUPS\": {\r\n            return { ...state, groups: action.payload }\r\n        }\r\n\r\n      \r\n        case \"ADD_NEW_GROUP_CLICKED\": {\r\n            return { ...state, addNewGroupClicked: action.payload }\r\n        }\r\n        case \"SAVE_GROUP\": {\r\n            return { ...state, groups: [...state.groups, action.payload] }\r\n        }\r\n        case \"IS_GROUP_SAVED\": {\r\n            return { ...state, isGroupSaved: action.payload }\r\n        }\r\n        case \"DELETE_GROUP\": {\r\n            return { ...state, groups: state.groups.filter(group => group._id !== action.payload._id) }\r\n        }\r\n        case \"SORT_GROUPS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, groups: [...state.groups].sort((a, b) =>\r\n                    (a[val] > b[val]) ? -1 : ((b[val] > a[val]) ? 1 : 0))\r\n            }\r\n        }\r\n        case \"GROUP_TO_EDIT\": {\r\n            return {\r\n                ...state, groupToEdit: action.payload\r\n            }\r\n        }\r\n        case \"EDIT_GROUP_CLICKED\": {\r\n            return {\r\n                ...state, isGroupEditClicked: action.payload\r\n            }\r\n        }\r\n        case \"EDIT_GROUP\": {\r\n            return {\r\n                ...state, groups: state.groups.map((group) => {\r\n                    if (group._id === action.payload._id) {\r\n                        return {\r\n                            ...group,\r\n                            ...action.payload\r\n                        }\r\n                    } else {\r\n                        return group\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers} from 'redux'\r\nimport {userReducer} from './reducers/userReducer'\r\nimport { productsReducer} from './reducers/productsReducer'\r\nimport { groupsReducer} from './reducers/groupsReducer'\r\n\r\nconst reducer = combineReducers({\r\n    userReducer,\r\n    productsReducer,\r\n    groupsReducer\r\n})\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}