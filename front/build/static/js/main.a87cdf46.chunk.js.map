{"version":3,"sources":["components/BudgetCalc/Inputs/Inputs.js","redux/reducers/reducer.js","redux/store.js","redux/actions/actions.js","components/BudgetCalc/Button/Button.js","components/BudgetCalc/TableTools/SelectMode/SelectMode.js","components/BudgetCalc/TableTools/SelectSort/SelectSort.js","components/BudgetCalc/TableTools/ToolsContent/ToolsContent.js","components/BudgetCalc/Alert/Alert.js","components/BudgetCalc/TableTools/TableTools.js","components/BudgetCalc/Checkbox/Checkbox.js","components/BudgetCalc/BudgetTable/Tbody/Tbody.js","components/BudgetCalc/BudgetTable/Thead/Thead.js","components/BudgetCalc/BudgetTable/TableInfo/TableInfo.js","components/BudgetCalc/BudgetTable/Table/Table.js","components/BudgetCalc/NewGroupForm/TableInfo/TableInfo.js","components/BudgetCalc/NewGroupForm/Table-NG/Table.js","components/BudgetCalc/Groups/Selected/Selected.js","components/BudgetCalc/Groups/GroupsTable/GroupsTable.js","components/BudgetCalc/Groups/Groups.js","components/BudgetCalc/NewGroupForm/Inputs-NG/Inputs.js","components/BudgetCalc/NewGroupForm/NewGroup/NewGroup.js","containers/BudgetCalc/BudgetCalc.js","containers/App.js","serviceWorker.js","index.js"],"names":["connect","state","types","budgetCalcTypes","props","onSubmit","saveProduct","className","htmlFor","onChange","handleInputValue","type","id","placeholder","value","product","name","date","price","quantity","onClick","editClicked","initState","products","isChecked","productGroups","groupDate","groupTotalPrice","addNewGroupClicked","mode","productToEdit","store","createStore","action","payload","filter","prod","map","i","val","checked","group","sort","a","b","clicked","changeMode","Button","click","content","selectModeHandler","sorts","selectFilterHandler","index","key","ToolsContent","deleteProductsClicked","addNewGroupHandler","Alert","text","TableTools","e","setState","addedType","target","handleHover","hovered","handleHoverLeave","dispatch","event","deleteProducts","this","onMouseEnter","onMouseLeave","totalPrice","addTypeHandler","addTypeClickedHandler","addTypeClicked","React","Component","Checkbox","handleCheckboxChange","Tbody","prods","Thead","TableInfo","productsLength","Table","length","properties","editGroupClicked","removeProductFromGroup","Selected","GroupsTable","groups","selectedGroupHandler","deleteGroupHandler","Groups","selected","deleteGroup","groupsToDelete","selectedGroup","Number","editGroupHandler","addProductToGroup","handleGroupDateInputValue","handleProductInputValue","required","NewGroup","preventDefault","newGroupProducts","Math","floor","random","push","error","closeErrorAlert","dlt","splice","indexOf","getTotalPrice","saveGroupOfProducts","productGroup","closeNewGroup","BudgetCalc","handleIsChecked","sortProducts","sortGroups","productsToDelete","selectedValue","totPrice","editProduct","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a87cdf46.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Inputs.css'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n        <form onSubmit={props.saveProduct}\r\n            className=\"budget-calc-inputs\">\r\n            <div className=\"bcalc-bigger-inputs\">\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        onChange={props.handleInputValue}\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        placeholder=\"product name\"\r\n                        value={props.product.name}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"date\">date</label>\r\n                    <input\r\n                        onChange={props.handleInputValue}\r\n                        type=\"date\"\r\n                        id=\"date\"\r\n                        value={props.product.date}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"type\">type</label>\r\n                    <input\r\n                        onChange={props.handleInputValue}\r\n                        type=\"text\"\r\n                        id=\"type\"\r\n                        value={props.product.type}\r\n                        placeholder=\"Type\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"bcalc-smaller-inputs\">\r\n                <div className=\"budget-calc-price-div\">\r\n                    <label htmlFor=\"quantity-input\">Price</label>\r\n                    <input\r\n                        onChange={props.handleInputValue}\r\n                        type=\"number\"\r\n                        id=\"price\"\r\n                        placeholder=\"price\"\r\n                        value={props.product.price}\r\n                    />\r\n                </div>\r\n                <div className=\"budget-calc-quantity-div\">\r\n                    <label id=\"quantity-label\" htmlFor=\"quantity-input\">Quantity</label>\r\n                    <input\r\n                        onChange={props.handleInputValue}\r\n                        type=\"number\"\r\n                        id=\"quantity\"\r\n                        placeholder=\"quantity\"\r\n                        value={props.product.quantity}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <button onClick={props.saveProduct}\r\n                className=\"budget-calc-submit-btn\">  {props.editClicked ? \"Save\" : \"Submit\"}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        types: state.budgetCalcTypes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Inputs);","const initState = {\r\n    products: [\r\n        {\r\n            id: 25,\r\n            name: \"cheese\",\r\n            type: \"food\",\r\n            price: 150,\r\n            quantity: 1,\r\n            date: \"2020-01-01\",\r\n            isChecked: false\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"burger\",\r\n            type: \"food\",\r\n            price: 120,\r\n            quantity: 2,\r\n            date: \"2019-01-01\",\r\n            isChecked: false\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"coca cola\",\r\n            type: \"drinks\",\r\n            price: 60,\r\n            quantity: 5,\r\n            date: \"2020-06-01\",\r\n            isChecked: false\r\n        }\r\n    ],\r\n    productGroups: [\r\n        {\r\n            id: 0,\r\n            groupDate: \"2019-05-01\",\r\n            type: 'groceries',\r\n            groupTotalPrice: 500,\r\n            isChecked: false,\r\n            products: [\r\n                {\r\n                    id: 25,\r\n                    name: \"Burger\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    id: 255,\r\n                    name: \"Alva\",\r\n                    price: 100,\r\n                    quantity: 2\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            id: 22,\r\n            groupDate: \"2020-01-01\",\r\n            type: \"electronics\",\r\n            groupTotalPrice: 600,\r\n            isChecked: false,\r\n            products: [\r\n                {\r\n                    id: 23,\r\n                    name: \"Phone\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                },\r\n                {\r\n                    id: 233,\r\n                    name: \"Laptop\",\r\n                    price: 150,\r\n                    quantity: 2\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    addNewGroupClicked: false,\r\n    mode: 'products',\r\n    productToEdit: {}\r\n}\r\n\r\nexport function reducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case \"SAVE_PRODUCT\": {\r\n            return { ...state, products: [...state.products, action.payload] }\r\n        }\r\n        case \"EDIT_PRODUCT\": {\r\n            return {\r\n                ...state, products: state.products.filter(prod =>\r\n                    prod.id !== action.payload.id), productToEdit: action.payload\r\n            }\r\n        }\r\n        case \"HANDLE_IS_CHECKED\": {\r\n            return {\r\n                ...state, products: state.products.map((prod, i) => prod.name === action.val ? { ...prod, isChecked: action.checked } : prod)\r\n            }\r\n        }\r\n        case \"DELETE_PRODUCTS\": {\r\n            return {\r\n                ...state, products: state.products.filter(prod => { return !prod.isChecked }\r\n                )\r\n            }\r\n        }\r\n        case \"ADD_NEW_GROUP_CLICKED\": {\r\n            return { ...state, addNewGroupClicked: action.payload }\r\n        }\r\n        case \"CHANGE_MODE\": {\r\n            return { ...state, mode: action.payload }\r\n        }\r\n        case \"SAVE_GROUP\": {\r\n            return { ...state, productGroups: [...state.productGroups, action.payload] }\r\n        }\r\n        case \"DELETE_GROUP\": {\r\n            return { ...state, productGroups: state.productGroups.filter(group => group.id !== action.payload.id) }\r\n        }\r\n        case \"SORT_GROUPS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, productGroups: [...state.productGroups].sort((a, b) =>\r\n                    (a[val] > b[val]) ? 1 : ((b[val] > a[val]) ? -1 : 0))\r\n            }\r\n        }\r\n        case \"SORT_PRODUCTS\": {\r\n            let val = action.payload\r\n            return {\r\n                ...state, products: [...state.products].sort((a, b) =>\r\n                    (a[val] > b[val]) ? 1 : ((b[val] > a[val]) ? -1 : 0))\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore} from 'redux'\r\nimport {reducer} from './reducers/reducer'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","export function saveProduct(product) {\r\n    return {\r\n        type: \"SAVE_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\nexport function editProduct(product) {\r\n    return {\r\n        type: \"EDIT_PRODUCT\",\r\n        payload: product\r\n    }\r\n}\r\n\r\nexport function handleIsChecked(val, checked) {\r\n    return {\r\n        type: \"HANDLE_IS_CHECKED\",\r\n        val: val,\r\n        checked: checked\r\n    }\r\n}\r\n\r\nexport function deleteProducts() {\r\n    return {\r\n        type: \"DELETE_PRODUCTS\"\r\n    }\r\n}\r\n\r\nexport function addNewGroupClicked(clicked) {\r\n    return {\r\n        type: \"ADD_NEW_GROUP_CLICKED\",\r\n        payload: clicked\r\n    }\r\n}\r\nexport function changeMode(mode) {\r\n    return {\r\n        type: \"CHANGE_MODE\",\r\n        payload: mode\r\n    }\r\n}\r\n\r\nexport function saveGroup(group) {\r\n    return {\r\n        type: \"SAVE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function deleteGroup(group) {\r\n    return {\r\n        type: \"DELETE_GROUP\",\r\n        payload: group\r\n    }\r\n}\r\n\r\nexport function sortGroups(val) {\r\n    return {\r\n        type: \"SORT_GROUPS\",\r\n        payload: val\r\n    }\r\n}\r\nexport function sortProducts(val) {\r\n    return {\r\n        type: \"SORT_PRODUCTS\",\r\n        payload: val\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button onClick={props.click} className={props.name}>{props.content}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport \"./SelectMode.css\"\r\nimport {connect} from 'react-redux'\r\n\r\nfunction SelectMode(props) {\r\n    return (\r\n        <div className=\"select-mode-div\" >\r\n            <label htmlFor=\"select-mode\">Select view mode</label>\r\n            <select id=\"select-mode\" className=\"select-mode\" onChange={props.selectModeHandler} value={props.mode}>\r\n                <option value=\"products\">Products </option>\r\n                <option value=\"groups\">Product groups</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectMode);","import React from 'react'\r\nimport './SelectSort.css'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction SelectSort(props) {\r\n    var sorts;\r\n    if (props.mode === 'groups') {\r\n        sorts = [\"groupDate\", 'type', 'groupTotalPrice']\r\n    } else {\r\n        sorts = props.sorts\r\n    }\r\n    return (\r\n        <div className=\"select-sort-div\" >\r\n            <select id=\"sort\" className=\"type-select\" onChange={props.selectFilterHandler}>\r\n            <option value=\"default\" >Select sort</option>\r\n                {sorts.map((sort, index) => {\r\n                    return <option key={`sort${index}`} value={sort}>{sort}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SelectSort);","import React from 'react'\r\nimport './ToolsContent.css'\r\nimport Button from '../../Button/Button'\r\nimport SelectMode from '../SelectMode/SelectMode'\r\nimport SelectSort from '../SelectSort/SelectSort'\r\n\r\nfunction ToolsContent(props) {\r\n    return (\r\n        <div className=\"table-tools-content\">\r\n            <h1>Tools</h1>\r\n            <div className=\"filter-div\">\r\n                <SelectMode selectModeHandler={props.selectModeHandler} />\r\n                <SelectSort selectFilterHandler={props.selectFilterHandler}\r\n                    sorts={props.sorts} />\r\n            </div>\r\n            <Button click={props.deleteProductsClicked}\r\n                content='Delete selected items'\r\n                name='table-tools-btn'\r\n            />\r\n            <Button click={props.addNewGroupHandler}\r\n                content='Add a new group of products'\r\n                name='table-tools-btn' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToolsContent;","import React from 'react'\r\nimport './Alert.css'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <main className=\"err-alert-main\">\r\n            <div className=\"err-alert-div\">\r\n                <h1>Error</h1>\r\n                <p>{props.text} bbbb</p>\r\n                <button onClick={props.click} className=\"close-err-alert-button\">Ok</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport './TableTools.css'\r\nimport store from '../../../redux/store'\r\nimport { addNewGroupClicked, changeMode, deleteProducts } from '../../../redux/actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport ToolsContent from './ToolsContent/ToolsContent'\r\nimport Alert from '../Alert/Alert'\r\n\r\nclass TableTools extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hovered: false,\r\n            sorts: [\"name\", \"type\", \"price\", \"quantity\", \"date\"],\r\n            addNewGroupClicked: false,\r\n            deleteProducts: false\r\n        }\r\n    }\r\n\r\n    handleInputValue = (e) => {\r\n        this.setState({ addedType: e.target.value })\r\n    }\r\n\r\n    handleHover = () => {\r\n        this.setState({ hovered: true })\r\n    }\r\n\r\n    handleHoverLeave = () => {\r\n        this.setState({ hovered: false })\r\n    }   \r\n\r\n    addNewGroupHandler = () => {\r\n        store.dispatch(addNewGroupClicked(!this.state.addNewGroupClicked))\r\n        store.dispatch(changeMode('groups'))\r\n    }\r\n\r\n    selectModeHandler = (event) => {\r\n        store.dispatch(changeMode(event.target.value))\r\n    }\r\n\r\n    deleteProductsClicked = () => {\r\n        this.setState({ deleteProducts: true })\r\n    }\r\n\r\n    deleteProducts = () => {\r\n        store.dispatch(deleteProducts())\r\n        this.setState({ deleteProducts: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.deleteProducts ? <Alert click={this.deleteProducts}\r\n                    text=\"You are about to delete several items. Are you sure?\" /> : null}\r\n                <div className={this.state.hovered ? \"table-tools-div table-tools-div-active\" : \"table-tools-div\"}\r\n                    onMouseEnter={this.handleHover}\r\n                    onMouseLeave={this.handleHoverLeave} >\r\n                    {this.state.hovered ?\r\n                        <ToolsContent deleteProductsClicked={this.deleteProductsClicked}\r\n                            totalPrice={this.props.totalPrice}\r\n                            selectFilterHandler={this.props.selectFilterHandler}\r\n                            handleInputValue={this.handleInputValue}\r\n                            addTypeHandler={this.addTypeHandler}\r\n                            addTypeClickedHandler={this.addTypeClickedHandler}\r\n                            addTypeClicked={this.state.addTypeClicked}\r\n                            sorts={this.state.sorts}\r\n                            addNewGroupHandler={this.addNewGroupHandler}\r\n                            selectModeHandler={this.selectModeHandler}\r\n                        />\r\n                        :\r\n                        <div className=\"before-hover-div\">\r\n                            <p><i className=\"fas fa-tools\"></i></p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        types: state.budgetCalcTypes\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TableTools);","import React from 'react'\r\nimport './Checkbox.css'\r\n\r\nfunction Checkbox(props) {\r\n        return (          \r\n                <input value={props.value}\r\n                    onChange={props.handleCheckboxChange}\r\n                    className=\"checkbox\" type=\"checkbox\" checked={props.checked} />\r\n        )\r\n}\r\n\r\nexport default Checkbox;","import React from 'react'\r\nimport './Tbody.css'\r\nimport Checkbox from '../../Checkbox/Checkbox'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction Tbody(props) {\r\n    const products = props.products.map((prod, i) => {\r\n        return (\r\n            <tr key={prod + i} className=\"product-tr\">\r\n                <td id=\"checkbox-td\">\r\n                    <Checkbox handleCheckboxChange={(e) => props.handleCheckboxChange(e)}\r\n                        prods={props.products}\r\n                        i={i}\r\n                        checked={prod.isChecked}\r\n                        value={prod.name}\r\n                    />\r\n                </td>\r\n                <td>{prod.name}</td>\r\n                <td>{prod.type}</td>\r\n                <td className=\"number-td\">{prod.quantity >= 1 ? (prod.price * prod.quantity) : prod.price}\r\n                    {prod.quantity >= 1 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                <td className=\"number-td\">{prod.quantity}</td>\r\n                <td>{prod.date}</td>\r\n                <td id=\"edit-td\">\r\n                    <Button click={() => props.productToEdit(prod)}\r\n                        content='Edit'\r\n                        name={props.editClicked ? \"budg-edit-btn budg-edit-btn-disabled \" : \"budg-edit-btn\"} />\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n        <tbody>\r\n            {products}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Tbody;","import React from 'react'\r\nimport './Thead.css'\r\n\r\nfunction Thead(props) {\r\n    return (\r\n        <div className=\"top-table\">\r\n                <ul>\r\n                    <li id=\"name-li\">Name</li>\r\n                    <li id=\"type-li\">Type</li>\r\n                    <li id=\"price-li\">Price</li>\r\n                    <li id=\"quantity-li\">Quantity</li>\r\n                    <li id=\"date-li\">Date</li>\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thead;","import React from 'react'\r\nimport './TableInfo.css'\r\n\r\nfunction TableInfo(props) {\r\n    return (\r\n        <div className=\"table-info-div\">\r\n            <p className=\"price-p\">Total price: <span>{props.totalPrice}</span></p>\r\n            <p className=\"price-p\">Number of products: <span>{props.productsLength}</span></p>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableInfo","import React from 'react'\r\nimport './Table.css'\r\nimport Tbody from '../Tbody/Tbody'\r\nimport Thead from '../Thead/Thead'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <div className=\"table-div\">\r\n            <h1>Products</h1>\r\n            <TableInfo totalPrice={props.totalPrice}\r\n                productsLength={props.products.length}\r\n                selectModeHandler={props.selectModeHandler}\r\n            />\r\n            <Thead properties={props.properties} />\r\n            <div className=\"products-div\">\r\n                <table className=\"budg-table\">\r\n                    <Tbody products={props.products}\r\n                        productToEdit={props.productToEdit}\r\n                        handleCheckboxChange={props.handleCheckboxChange}\r\n                        editClicked={props.editClicked}\r\n                    />\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\nimport './TableInfo.css'\r\n\r\nfunction TableInfo(props) {\r\n    return (\r\n        <main className=\"ng-info-main\">\r\n          <p>Number of products: <span>{props.productsLength}</span></p>   \r\n          <p>Total price: <span>{props.totalPrice}</span></p>   \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TableInfo ","import React from 'react'\r\nimport './Table.css'\r\nimport TableInfo from '../TableInfo/TableInfo'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Table(props) {\r\n        var prods = props.products.map((prod, i) => {\r\n            return (\r\n                <tr key={prod.name + i}\r\n                    className=\"ng-new-prod-tr\">\r\n                    <td>{prod.name}</td>\r\n                    <td>{prod.quantity !== 0 ? (prod.price * prod.quantity) : prod.price}\r\n                        {prod.quantity !== 0 ? <span>{\"(\" + prod.price + \")\"}</span> : null}</td>\r\n                    <td>{prod.quantity}</td>\r\n                    {!props.addNewGroupClicked ? null :\r\n                        <td className=\"x-td\" onClick={() => props.removeProductFromGroup(prod.id)}>X</td>}\r\n                </tr>\r\n            )\r\n        })\r\n    return (\r\n        <>\r\n            <TableInfo productsLength={props.products.length}\r\n                totalPrice={props.totalPrice}\r\n            />\r\n            <table className=\"ng-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        {!props.addNewGroupClicked ? null :\r\n                            <th></th>}\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"ng-table-body\">\r\n                    {prods}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode,\r\n        addNewGroupClicked: state.addNewGroupClicked,\r\n        productToEdit: state.productToEdit,\r\n        editGroupClicked: state.editGroupClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table)","import React from 'react'\r\nimport './Selected.css'\r\nimport Table from '../../NewGroupForm/Table-NG/Table'\r\n\r\nfunction Selected(props) {\r\n\r\n    return (\r\n        <div className=\"selected-group\">\r\n            \r\n            <h1>Products</h1>\r\n            <Table products={props.products}\r\n                totalPrice={props.totalPrice}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Selected;","import React from 'react'\r\nimport './GroupsTable.css'\r\nimport Button from '../../Button/Button'\r\n\r\nfunction GroupsTable(props) {\r\n    var groups = props.groups.map((group, i) => {\r\n        return (\r\n            <tr key={group + i} className=\"group-tr\">\r\n                <td>{group.groupDate}</td>\r\n                <td>{group.type}</td>\r\n                <td>{group.groupTotalPrice}</td>\r\n                <td onClick={() => props.selectedGroupHandler(group)} className=\"expand-td\">\r\n                   <span>Open</span>  <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n                </td>\r\n                <td id=\"edit-td\">\r\n                    <Button click={() => props.deleteGroupHandler(group)}\r\n                        content='Delete'\r\n                        name='budg-edit-btn budg-dlt-btn' />\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n    return (\r\n        <table className=\"groups-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Total Price</th>\r\n                    <th>Products</th>\r\n                    <th></th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {groups}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default GroupsTable;","import React from 'react'\r\nimport './Groups.css'\r\nimport { connect } from 'react-redux'\r\nimport Selected from './Selected/Selected'\r\nimport Button from '../Button/Button'\r\nimport GroupsTable from './GroupsTable/GroupsTable'\r\nimport store from '../../../redux/store'\r\nimport { addNewGroupClicked, deleteGroup } from '../../../redux/actions/actions'\r\n\r\nclass Groups extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: [],\r\n            groupsToDelete: []\r\n        }\r\n    }\r\n\r\n    selectedGroupHandler = (group) => {\r\n        this.setState({ selected: group.products })\r\n    }\r\n\r\n    addNewGroupHandler = () => {\r\n        store.dispatch(addNewGroupClicked(!this.state.addNewGroupClicked))\r\n    }\r\n\r\n    deleteGroupHandler = (group) => {\r\n        store.dispatch(deleteGroup(group))\r\n    }\r\n\r\n    render() {\r\n        var selectedGroup = this.state.selected\r\n        var totalPrice = 0\r\n        for (var i = 0; i < selectedGroup.length; i++) {\r\n            if (selectedGroup[i].quantity > 1) {\r\n                totalPrice += (selectedGroup[i].quantity * Number(selectedGroup[i].price))\r\n            } else if (selectedGroup[i].quantity < 2) {\r\n                totalPrice += Number(selectedGroup[i].price)\r\n            }\r\n        }\r\n        return (\r\n            <main className=\"groups-main\">\r\n                <h1>Groups</h1>\r\n                <div className=\"groups-content\">\r\n                    <div className=\"groups-div\">\r\n                        <GroupsTable groups={this.props.groups}\r\n                            selectedGroupHandler={this.selectedGroupHandler}\r\n                            deleteGroupHandler={this.deleteGroupHandler}\r\n                            editGroupHandler={this.editGroupHandler}\r\n                            totalPrice={totalPrice}\r\n                        />\r\n                    </div>\r\n                    <div className=\"groups-right-div\">\r\n                        <Button click={this.addNewGroupHandler}\r\n                            content='Add a new group of products'\r\n                            name='table-tools-btn' />\r\n                        <Selected products={this.state.selected}\r\n                            totalPrice={totalPrice}\r\n                            addNewGroupHandler={this.addNewGroupHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: state.productGroups\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Groups)","import React from 'react'\r\nimport './Inputs.css'\r\nimport Button from '../../Button/Button'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Inputs(props) {\r\n    return (\r\n        <form onSubmit={props.addProductToGroup}>\r\n            <div className=\"ng-date-div\">\r\n                <div>\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input onChange={props.handleGroupDateInputValue} type=\"date\" id=\"date\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input onChange={props.handleGroupDateInputValue} type=\"text\" id=\"type\" placeholder=\"Enter the type of your products\" />\r\n                </div>\r\n\r\n            </div>\r\n            <input onChange={props.handleProductInputValue}\r\n                type=\"text\" id=\"name\" placeholder=\"Enter product name\"\r\n                value={props.product.name} />\r\n\r\n            <div className=\"ng-price-quantity-div\">\r\n                <label htmlFor=\"price\">Price:</label>\r\n                <input type=\"number\" id=\"price\"\r\n                    onChange={props.handleProductInputValue}\r\n                    placeholder=\"Enter product price\"\r\n                    value={props.product.price} required />\r\n                <label htmlFor=\"quantity\">Quantity:</label>\r\n                <input type=\"number\" id=\"quantity\"\r\n                    onChange={props.handleProductInputValue}\r\n                    placeholder=\"Enter product quantity\"\r\n                    value={props.product.quantity} />\r\n            </div>\r\n            <Button click={props.addProductToGroup}\r\n                content='Add product to group'\r\n                name=\"ng-btn\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        productToEdit: state.productToEdit\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Inputs)","import React from 'react'\r\nimport './NewGroup.css'\r\nimport Inputs from '../Inputs-NG/Inputs'\r\nimport Table from '../Table-NG/Table'\r\nimport Button from '../../Button/Button'\r\nimport store from '../../../../redux/store'\r\nimport { addNewGroupClicked, saveGroup } from '../../../../redux/actions/actions'\r\nimport Alert from '../../Alert/Alert'\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            date: '',\r\n            type: '',\r\n            newGroupProducts: [],\r\n            product: {\r\n                name: '',\r\n                price: 0,\r\n                quantity: 1\r\n            },\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleProductInputValue = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            product: { ...this.state.product, [event.target.id]: event.target.value },\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleGroupDateInputValue = (event) => {\r\n        this.setState({ [event.target.id]: event.target.value })\r\n    }\r\n\r\n    addProductToGroup = (e) => {\r\n        e.preventDefault()\r\n        var product = this.state.product\r\n        if (product.name !== '' && product.price !== 0 && product.quantity > 0) {\r\n            var prods = this.state.newGroupProducts\r\n            product.id = Math.floor(Math.random() * 1000)\r\n            prods.push(product)\r\n            this.setState({\r\n                newGroupProducts: prods,\r\n                product: { name: '', price: 0, quantity: 1 }\r\n            })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({error:false})\r\n    }\r\n\r\n    removeProductFromGroup = (id) => {\r\n        var products = this.state.newGroupProducts\r\n        var dlt = products.filter((prod, i) => prod.id === id)\r\n        products.splice(products.indexOf(dlt[0]), 1)\r\n        this.setState({ newGroupProducts: products })\r\n    }\r\n\r\n    getTotalPrice =(products) => {\r\n        let totalPrice = 0;\r\n        for (var i = 0; i < products.length; i++) {\r\n            if (products[i].quantity > 1) {\r\n                totalPrice += (products[i].quantity * Number(products[i].price))\r\n            } else {\r\n                totalPrice += Number(products[i].price)\r\n            }\r\n        }\r\n        return totalPrice;\r\n    }\r\n\r\n    saveGroupOfProducts = () => {\r\n        if (this.state.type !== '' && this.state.date !== '') { \r\n        var products = this.state.newGroupProducts\r\n        var totalPrice = this.getTotalPrice(products);\r\n        const productGroup = {\r\n            id: Math.floor(Math.random() * 1000),\r\n            groupDate: this.state.date,\r\n            type: this.state.type,\r\n            groupTotalPrice: totalPrice,\r\n            products: this.state.newGroupProducts\r\n        }\r\n        this.setState({ newGroupProducts: [], type: '', date: '' })\r\n        store.dispatch(addNewGroupClicked(false))\r\n        store.dispatch(saveGroup(productGroup))\r\n    } else {\r\n        this.setState({error: true})\r\n    }\r\n}\r\n\r\ncloseNewGroup = () => {\r\n    store.dispatch(addNewGroupClicked(false))\r\n}\r\n\r\nrender() {\r\n    var products = this.state.newGroupProducts\r\n    var totalPrice = this.getTotalPrice(products)\r\n    return (\r\n        <main className=\"ng-main\">\r\n            {this.state.error ? <Alert click={this.closeErrorAlert} text=\"Please fill up every field!\" /> :null}\r\n            <div className=\"ng-div\">\r\n                <h3>You are creating a new group of products</h3>\r\n                <Inputs addProductToGroup={this.addProductToGroup}\r\n                    handleGroupDateInputValue={this.handleGroupDateInputValue}\r\n                    handleProductInputValue={this.handleProductInputValue}\r\n                    product={this.state.product} />\r\n                <div className=\"ng-prods-dv\">\r\n                    <Table products={this.state.newGroupProducts}\r\n                        totalPrice={totalPrice}\r\n                        removeProductFromGroup={this.removeProductFromGroup}\r\n                    />\r\n                    <Button click={this.closeNewGroup}\r\n                        content='Close'\r\n                        name='ng-btn ng-close-btn' />\r\n                    <Button click={this.saveGroupOfProducts}\r\n                        content='Save group'\r\n                        name='ng-btn' />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\nexport default NewGroup; ","import React from 'react'\r\nimport './BudgetCalc.css'\r\nimport Inputs from '../../components/BudgetCalc/Inputs/Inputs'\r\nimport TableTools from '../../components/BudgetCalc/TableTools/TableTools'\r\nimport Table from '../../components/BudgetCalc/BudgetTable/Table/Table'\r\nimport Groups from '../../components/BudgetCalc/Groups/Groups'\r\nimport { connect } from 'react-redux'\r\nimport store from '../../redux/store'\r\nimport { sortGroups, sortProducts, saveProduct, editProduct, handleIsChecked } from '../../redux/actions/actions'\r\nimport Alert from '../../components/BudgetCalc/Alert/Alert'\r\nimport NewGroup from '../../components/BudgetCalc/NewGroupForm/NewGroup/NewGroup'\r\n\r\nclass BudgetCalc extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            product: {\r\n                id: '',\r\n                name: '',\r\n                type: '',\r\n                price: 0,\r\n                quantity: 1,\r\n                date: ''\r\n            },\r\n            products: props.products,\r\n            isChecked: false,\r\n            productsToDelete: [],\r\n            editClicked: false,\r\n            selectedValue: 'name',\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleInputValue = (event) => {\r\n        this.setState({ ...this.state, product: { ...this.state.product, [event.target.id]: event.target.value } })\r\n    }\r\n\r\n    saveProduct = (e) => {\r\n        var product = this.state.product\r\n        e.preventDefault()\r\n        if (product.name !== '' && product.type !== '' && product.price !== 0 && product.quantity >= 1 && product.date !== '') {\r\n            product.id = Math.floor(Math.random() * 1000)\r\n            product.isChecked = false\r\n            store.dispatch(saveProduct(product))\r\n            this.setState({\r\n                product: { id: '', name: '', type: '', price: 0, quantity: 1, date: '' },\r\n                editClicked: false\r\n            })\r\n        } else {\r\n            this.setState({ error: true })\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ error: false })\r\n    }\r\n\r\n    handleCheckboxChange = (e) => {\r\n        let val = e.target.value\r\n        let checked = e.target.checked\r\n        store.dispatch(handleIsChecked(val, checked))\r\n    }\r\n\r\n    productToEdit = (prod) => {\r\n        store.dispatch(editProduct(prod))\r\n        this.setState({\r\n            editClicked: true,\r\n            product: prod\r\n        })\r\n    }\r\n\r\n    selectFilterHandler = (e) => {\r\n        var val = e.target.value\r\n        if (this.props.mode === 'products') {\r\n            store.dispatch(sortProducts(val))\r\n        } else {\r\n            store.dispatch(sortGroups(val))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var totPrice = 0;\r\n        for (var i = 0; i < this.state.products.length; i++) {\r\n            if (this.state.products[i].quantity >= 1) {\r\n                totPrice += (this.state.products[i].quantity * Number(this.state.products[i].price))\r\n            } else if (this.state.products[i].quantity < 1) {\r\n                totPrice += Number(this.state.products[i].price)\r\n            }\r\n        }\r\n        return (\r\n            <main className=\"budget-calc-main\">\r\n                {this.props.addNewGroupClicked ? <NewGroup /> : null}\r\n\r\n                {this.state.error ? <Alert click={this.closeErrorAlert}\r\n                    text=\"Please fill up every field!\"\r\n                /> : null}\r\n                <h1 className=\"budget-calc-h1\">Budget Calculator</h1>\r\n                {this.props.mode === \"products\" ?\r\n                    <Inputs saveProduct={this.saveProduct}\r\n                        handleInputValue={this.handleInputValue}\r\n                        product={this.state.product}\r\n                        editClicked={this.state.editClicked}\r\n                        editProduct={this.editProduct}\r\n                        types={this.state.types}\r\n                    /> : null}\r\n                <div className=\"budget-calc-content-div\">\r\n                    {this.props.mode === \"products\" ?\r\n                        <Table\r\n                            properties={this.state.properties}\r\n                            products={this.props.products}\r\n                            productToEdit={this.productToEdit}\r\n                            handleCheckboxChange={this.handleCheckboxChange}\r\n                            editClicked={this.state.editClicked}\r\n                            totalPrice={totPrice}\r\n                        /> : <Groups />}\r\n                    <TableTools\r\n                        deleteProducts={this.deleteProducts}\r\n                        selectFilterHandler={this.selectFilterHandler}\r\n                    />\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        mode: state.mode,\r\n        products: state.products,\r\n        groups: state.productGroups,\r\n        addNewGroupClicked: state.addNewGroupClicked\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BudgetCalc)","import React from 'react';\r\nimport './App.css';\r\nimport BudgetCalc from './BudgetCalc/BudgetCalc'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <BudgetCalc/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}